@font-face {
    font-family: 'Source Sans Pro';
    font-style: normal;
    font-weight: 200;
    src: local("Source Sans Pro ExtraLight"), local("SourceSansPro-ExtraLight"), url(https://fonts.gstatic.com/s/sourcesanspro/v13/6xKydSBYKcSV-LCoeQqfX1RYOo3i94_wlxdr.ttf) format("truetype"); }

@font-face {
    font-family: 'Source Sans Pro';
    font-style: normal;
    font-weight: 300;
    src: local("Source Sans Pro Light"), local("SourceSansPro-Light"), url(https://fonts.gstatic.com/s/sourcesanspro/v13/6xKydSBYKcSV-LCoeQqfX1RYOo3ik4zwlxdr.ttf) format("truetype"); }

/* line 13, src/assets/css/login.scss */
/* line 14, src/mel/assets/css/login.css */
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-weight: 300; }

/* line 19, src/assets/css/login.scss */
/* line 23, src/mel/assets/css/login.css */
body {
    font-family: 'Source Sans Pro', sans-serif;
    color: white;
    font-weight: 300; }

/* line 24, src/assets/css/login.scss */
/* line 29, src/mel/assets/css/login.css */
body ::-webkit-input-placeholder {
    /* WebKit browsers */
    font-family: 'Source Sans Pro', sans-serif;
    color: white;
    font-weight: 300; }

/* line 30, src/assets/css/login.scss */
/* line 36, src/mel/assets/css/login.css */
body :-moz-placeholder {
    /* Mozilla Firefox 4 to 18 */
    font-family: 'Source Sans Pro', sans-serif;
    color: white;
    opacity: 1;
    font-weight: 300; }

/* line 37, src/assets/css/login.scss */
/* line 44, src/mel/assets/css/login.css */
body ::-moz-placeholder {
    /* Mozilla Firefox 19+ */
    font-family: 'Source Sans Pro', sans-serif;
    color: white;
    opacity: 1;
    font-weight: 300; }

/* line 44, src/assets/css/login.scss */
/* line 52, src/mel/assets/css/login.css */
body :-ms-input-placeholder {
    /* Internet Explorer 10+ */
    font-family: 'Source Sans Pro', sans-serif;
    color: white;
    font-weight: 300; }

/* line 51, src/assets/css/login.scss */
/* line 59, src/mel/assets/css/login.css */
.container {
    display: flex; }

/* line 55, src/assets/css/login.scss */
/* line 67, src/mel/assets/css/login.css */
.wrapper {
    max-width: none;
    margin: 0;
    background: var(--primaryColor);
    background: linear-gradient(to bottom right, var(--primaryColor) 0%, var(--secondaryColor) 100%);
    flex: 1 1 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden; }

/* line 67, src/assets/css/login.scss */
/* line 98, src/mel/assets/css/login.css */
.wrapper.form-success .login-container h1 {
    transform: translateY(85px); }

/* line 71, src/assets/css/login.scss */
/* line 105, src/mel/assets/css/login.css */
.login-container {
    max-width: 600px;
    margin: 0 auto 5rem;
    padding: 80px 0;
    height: 360px;
    text-align: center; }

/* line 79, src/assets/css/login.scss */
/* line 113, src/mel/assets/css/login.css */
.login-container label {
    font-size: 1.5rem;
    position: relative;
    z-index: 10; }

/* line 86, src/assets/css/login.scss */
/* line 119, src/mel/assets/css/login.css */
.login-container form {
    display: none; }

/* line 90, src/assets/css/login.scss */
/* line 123, src/mel/assets/css/login.css */
.tab {
    z-index: 10;
    position: relative;
    font-size: 1.5rem;
    margin: .5rem;
    cursor: pointer;
    color: var(--secondaryColor); }

/* line 99, src/assets/css/login.scss */
/* line 132, src/mel/assets/css/login.css */
.tab.active {
    color: white; }

/* line 103, src/assets/css/login.scss */
/* line 136, src/mel/assets/css/login.css */
.tab.active::before {
    content: '';
    position: absolute;
    bottom: -5px;
    width: 100%;
    height: 3px;
    background-color: var(--darkPurple) !important; }

/* line 112, src/assets/css/login.scss */
/* line 145, src/mel/assets/css/login.css */
form {
    padding: 20px 0;
    position: relative;
    z-index: 2;
    -webkit-animation: fadeIn 1s forwards;
    animation: fadeIn 1s forwards; }

/* line 119, src/assets/css/login.scss */
/* line 154, src/mel/assets/css/login.css */
form.active {
    flex-direction: column; }

/* line 123, src/assets/css/login.scss */
/* line 164, src/mel/assets/css/login.css */
form input {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    outline: 0;
    border: 1px solid rgba(255, 255, 255, 0.4);
    background-color: rgba(255, 255, 255, 0.2);
    width: 100%;
    border-radius: 3px;
    padding: 10px 15px;
    margin: 0 auto 10px auto;
    display: block;
    text-align: center;
    font-size: 18px;
    color: white;
    transition-duration: 0.25s;
    font-weight: 300; }

/* line 142, src/assets/css/login.scss */
/* line 187, src/mel/assets/css/login.css */
form input:hover {
    background-color: rgba(255, 255, 255, 0.4); }

/* line 145, src/assets/css/login.scss */
/* line 191, src/mel/assets/css/login.css */
form input:focus {
    background-color: white;
    color: var(--primaryColor); }

/* line 149, src/assets/css/login.scss */
/* line 196, src/mel/assets/css/login.css */
form button {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    outline: 0;
    background-color: white;
    padding: 1rem;
    color: var(--primaryColor);
    border-radius: 3px;
    width: 100%;
    font-size: 18px;
    transition-duration: 0.25s; }

/* line 163, src/assets/css/login.scss */
/* line 214, src/mel/assets/css/login.css */
form button:hover {
    background-color: #f5f7f9; }

/* line 166, src/assets/css/login.scss */
/* line 218, src/mel/assets/css/login.css */
.bg-bubbles {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1; }

/* line 174, src/assets/css/login.scss */
/* line 227, src/mel/assets/css/login.css */
.bg-bubbles li {
    position: absolute;
    list-style: none;
    display: block;
    width: 40px;
    height: 40px;
    background-color: rgba(255, 255, 255, 0.15);
    bottom: -160px;
    -webkit-animation: square 25s infinite;
    animation: square 25s infinite;
    transition-timing-function: linear; }

/* line 187, src/assets/css/login.scss */
/* line 243, src/mel/assets/css/login.css */
.bg-bubbles li:nth-child(1) {
    left: 10%; }

/* line 190, src/assets/css/login.scss */
/* line 247, src/mel/assets/css/login.css */
.bg-bubbles li:nth-child(2) {
    left: 20%;
    width: 80px;
    height: 80px;
    -webkit-animation-delay: 2s;
    animation-delay: 2s;
    -webkit-animation-duration: 17s;
    animation-duration: 17s; }

/* line 199, src/assets/css/login.scss */
/* line 259, src/mel/assets/css/login.css */
.bg-bubbles li:nth-child(3) {
    left: 25%;
    -webkit-animation-delay: 4s;
    animation-delay: 4s; }

/* line 204, src/assets/css/login.scss */
/* line 266, src/mel/assets/css/login.css */
.bg-bubbles li:nth-child(4) {
    left: 40%;
    width: 60px;
    height: 60px;
    -webkit-animation-duration: 22s;
    animation-duration: 22s;
    background-color: rgba(255, 255, 255, 0.25); }

/* line 212, src/assets/css/login.scss */
/* line 276, src/mel/assets/css/login.css */
.bg-bubbles li:nth-child(5) {
    left: 70%; }

/* line 215, src/assets/css/login.scss */
/* line 280, src/mel/assets/css/login.css */
.bg-bubbles li:nth-child(6) {
    left: 80%;
    width: 120px;
    height: 120px;
    -webkit-animation-delay: 3s;
    animation-delay: 3s;
    background-color: rgba(255, 255, 255, 0.2); }

/* line 223, src/assets/css/login.scss */
/* line 290, src/mel/assets/css/login.css */
.bg-bubbles li:nth-child(7) {
    left: 32%;
    width: 160px;
    height: 160px;
    -webkit-animation-delay: 7s;
    animation-delay: 7s; }

/* line 230, src/assets/css/login.scss */
/* line 299, src/mel/assets/css/login.css */
.bg-bubbles li:nth-child(8) {
    left: 55%;
    width: 20px;
    height: 20px;
    -webkit-animation-delay: 15s;
    animation-delay: 15s;
    -webkit-animation-duration: 40s;
    animation-duration: 40s; }

/* line 239, src/assets/css/login.scss */
/* line 311, src/mel/assets/css/login.css */
.bg-bubbles li:nth-child(9) {
    left: 25%;
    width: 10px;
    height: 10px;
    -webkit-animation-delay: 2s;
    animation-delay: 2s;
    -webkit-animation-duration: 40s;
    animation-duration: 40s;
    background-color: rgba(255, 255, 255, 0.3); }

/* line 249, src/assets/css/login.scss */
/* line 324, src/mel/assets/css/login.css */
.bg-bubbles li:nth-child(10) {
    left: 90%;
    width: 160px;
    height: 160px;
    -webkit-animation-delay: 11s;
    animation-delay: 11s; }

@-webkit-keyframes square {
    0% {
        transform: translateY(0); }
    100% {
        transform: translateY(-120vh) rotate(600deg); } }

@keyframes square {
    0% {
        transform: translateY(0); }
    100% {
        transform: translateY(-120vh) rotate(600deg); } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
