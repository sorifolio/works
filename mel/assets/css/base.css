@font-face {
    font-family: 'Nunito';
    src: url("../fonts/Nunito-Regular.ttf"); }

@font-face {
    font-family: 'Raleway';
    src: url("../fonts/Raleway-Medium.ttf"); }

@font-face {
    font-family: 'Nanumsquare';
    src: url("../fonts/NanumSquareL.ttf"), url("../fonts/NanumSquareL.woff") format("woff"), url("../fonts/NanumSquareL.eot") format("embedded-opentype"); }

/* line 17, src/assets/css/base.scss */
/* line 14, src/mel/assets/css/base.css */
:root {
    --backgroundColor: #edeef5;
    --primaryColor: #5c61b2;
    --secondaryColor: #dfe1f0;
    --darkPurple: #676a94;
    --darkmodePrimaryColor: #27292d;
    --darkmodeSecondaryColor: #373a46;
    --darkmodeTertiaryColor: #85899a;
    --brightPurple: #8f93e0;
    --brightGray: #d8dae0;
    --charcoal: #484c5a
; }

/* line 30, src/assets/css/base.scss */
/* line 28, src/mel/assets/css/base.css */
svg {
    fill: var(--darkmodePrimaryColor); }

/* line 34, src/assets/css/base.scss */
/* line 32, src/mel/assets/css/base.css */
body {
    margin: 0;
    padding: 0;
    width: 100%;
    overflow: hidden;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
    font: 14px/1.5 'Nunito';
    color: #08090d;
    background-color: var(--backgroundColor); }

/* line 47, src/assets/css/base.scss */
/* line 45, src/mel/assets/css/base.css */
.container {
    width: 100%;
    height: 100vh;
    height: calc(var(--vh, 1vh) * 100);
    display: flex;
    flex-direction: column; }

/* line 55, src/assets/css/base.scss */
/* line 65, src/mel/assets/css/base.css */
ul {
    margin: 0;
    padding: 0;
    list-style: none;
    display: flex; }

/* line 62, src/assets/css/base.scss */
/* line 76, src/mel/assets/css/base.css */
a {
    text-decoration: none;
    color: #31517b; }

/* line 67, src/assets/css/base.scss */
/* line 81, src/mel/assets/css/base.css */
.add-input {
    width: 100%;
    margin: 0 auto;
    fill: var(--brightPurple) !important; }

/* line 73, src/assets/css/base.scss */
/* line 87, src/mel/assets/css/base.css */
h1, h2, h3, h4, h5, p {
    font-family: 'Nanumsquare';
    margin: 0; }

/* line 78, src/assets/css/base.scss */
/* line 92, src/mel/assets/css/base.css */
small {
    font-family: Comfortaa;
    line-height: 1.2; }

/* line 83, src/assets/css/base.scss */
/* line 97, src/mel/assets/css/base.css */
.active {
    opacity: 1 !important;
    display: flex !important; }

/* line 88, src/assets/css/base.scss */
/* line 106, src/mel/assets/css/base.css */
fieldset {
    border-radius: .5rem;
    border: 1px solid var(--charcoal); }

/* line 93, src/assets/css/base.scss */
/* line 113, src/mel/assets/css/base.css */
legend {
    text-align: center;
    color: var(--brightGray); }

/* line 98, src/assets/css/base.scss */
/* line 118, src/mel/assets/css/base.css */
input {
    -webkit-appearance: none;
    height: auto;
    border: 1px solid var(--secondaryColor);
    padding: .7rem;
    font: 15px/1.5 'NanumSquare';
    background-color: white;
    outline: 0;
    box-sizing: border-box;
    border-radius: .3rem;
    position: relative; }

/* line 111, src/assets/css/base.scss */
/* line 135, src/mel/assets/css/base.css */
input[type="password"] {
    font-family: "Comfortaa"; }

/* line 115, src/assets/css/base.scss */
/* line 139, src/mel/assets/css/base.css */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0; }

/* line 121, src/assets/css/base.scss */
/* line 145, src/mel/assets/css/base.css */
input:focus, select:focus, button:focus {
    outline: 0; }

/* line 125, src/assets/css/base.scss */
/* line 149, src/mel/assets/css/base.css */
label {
    flex: 0 0 20% !important;
    color: slategray; }

/* line 130, src/assets/css/base.scss */
/* line 158, src/mel/assets/css/base.css */
button {
    border: 0;
    background: var(--primaryColor);
    color: white;
    border-radius: .2rem;
    padding: .5rem 1rem;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center; }

/* line 141, src/assets/css/base.scss */
/* line 183, src/mel/assets/css/base.css */
button-submit {
    background-color: var(--primaryColor); }

/* line 145, src/assets/css/base.scss */
/* line 186, src/mel/assets/css/base.css */
button-cancel {
    background-color: var(--secondaryColor);
    color: var(--darkPurple); }

/* line 150, src/assets/css/base.scss */
/* line 190, src/mel/assets/css/base.css */
button-modify {
    background-color: var(--secondaryColor);
    color: var(--darkPurple);
    width: 2rem;
    height: 2rem;
    padding: 0; }

/* line 158, src/assets/css/base.scss */
/* line 197, src/mel/assets/css/base.css */
button svg {
    fill: white; }

/* line 163, src/assets/css/base.scss */
/* line 201, src/mel/assets/css/base.css */
textarea {
    -moz-appearance: none;
    appearance: none;
    -webkit-appearance: none;
    background-color: white;
    border: 1px solid var(--secondaryColor);
    border-radius: .5rem;
    padding: .5rem;
    resize: none; }

/* line 164, src/assets/css/base.scss */
/* line 213, src/mel/assets/css/base.css */
textarea:focus {
    outline: 0; }

/* line 177, src/assets/css/base.scss */
/* line 217, src/mel/assets/css/base.css */
header {
    flex: 0 0 auto;
    display: flex;
    align-content: center;
    justify-content: space-between;
    padding: 0 1rem;
    box-sizing: border-box; }

/* line 185, src/assets/css/base.scss */
/* line 241, src/mel/assets/css/base.css */
header a {
    display: flex;
    padding: 1rem .5rem; }

/* line 190, src/assets/css/base.scss */
/* line 249, src/mel/assets/css/base.css */
header ul {
    display: flex;
    align-items: center;
    cursor: pointer; }

/* line 197, src/assets/css/base.scss */
/* line 263, src/mel/assets/css/base.css */
.content {
    opacity: 0;
    flex: 1 1 auto;
    align-items: center;
    overflow-y: auto;
    display: flex;
    flex-direction: column;
    -webkit-animation: fadeIn .4s forwards;
    animation: fadeIn .4s forwards;
    transition: .2s border-color; }

/* line 208, src/assets/css/base.scss */
/* line 296, src/mel/assets/css/base.css */
.content > .title {
    flex: 0 0 auto;
    padding: 2rem 0;
    width: 100%;
    max-width: 1200px;
    box-sizing: border-box;
    display: flex;
    justify-content: space-between;
    align-items: center; }

/* line 220, src/assets/css/base.scss */
/* line 325, src/mel/assets/css/base.css */
.content > .title .button-container button {
    padding: .6rem 1.6rem; }

/* line 224, src/assets/css/base.scss */
/* line 329, src/mel/assets/css/base.css */
.content .title h1 {
    font: normal 1.7rem/1 'Nanumsquare'; }

/* line 228, src/assets/css/base.scss */
/* line 333, src/mel/assets/css/base.css */
.content .title p {
    color: #5e5c67;
    font-size: 16px; }

/* line 233, src/assets/css/base.scss */
/* line 338, src/mel/assets/css/base.css */
.content-view {
    flex: 0 1 auto;
    padding: 0 1rem 1rem 1rem;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    max-width: 1200px;
    width: 100%;
    position: relative; }

/* line 244, src/assets/css/base.scss */
/* line 363, src/mel/assets/css/base.css */
.wrapper {
    flex: 1 1 auto;
    padding: 2rem;
    margin: 0 auto;
    max-width: 1200px;
    display: flex;
    flex-direction: column;
    box-sizing: border-box; }

/* line 254, src/assets/css/base.scss */
/* line 389, src/mel/assets/css/base.css */
.input-container {
    display: flex;
    flex-direction: column;
    margin-bottom: 1rem;
    position: relative; }

/* line 261, src/assets/css/base.scss */
/* line 406, src/mel/assets/css/base.css */
.input-container div {
    display: flex;
    align-items: center; }

/* line 266, src/assets/css/base.scss */
/* line 419, src/mel/assets/css/base.css */
.input-container div input {
    flex: 1 1 auto; }

/* line 270, src/assets/css/base.scss */
/* line 427, src/mel/assets/css/base.css */
.button-container {
    display: flex;
    flex-direction: row-reverse; }

/* line 275, src/assets/css/base.scss */
/* line 442, src/mel/assets/css/base.css */
.button-container button {
    margin-left: .5rem; }

/* Progress */
/* line 281, src/assets/css/base.scss */
/* line 447, src/mel/assets/css/base.css */
.progress-wrap {
    position: fixed;
    right: 50px;
    bottom: 50px;
    height: 46px;
    width: 46px;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-content: center;
    border-radius: 50px;
    z-index: 10000;
    opacity: 0;
    visibility: hidden;
    background-color: lightsteelblue;
    transform: translateY(15px);
    transition: all 200ms linear; }

/* line 301, src/assets/css/base.scss */
/* line 483, src/mel/assets/css/base.css */
.progress-wrap.active-progress {
    opacity: 1;
    visibility: visible;
    transform: translateY(0); }

/* line 307, src/assets/css/base.scss */
/* line 492, src/mel/assets/css/base.css */
.progress-wrap svg.progress-circle path {
    stroke: white;
    stroke-width: 4;
    box-sizing: border-box;
    transition: all 200ms linear; }

/* line 315, src/assets/css/base.scss */
/* line 503, src/mel/assets/css/base.css */
.progress-wrap svg {
    fill: white;
    align-self: center; }

/* Pagination */
/* line 323, src/assets/css/base.scss */
/* line 511, src/mel/assets/css/base.css */
.pagination {
    margin: 2rem auto; }

/* line 328, src/assets/css/base.scss */
/* line 515, src/mel/assets/css/base.css */
.pagination ul {
    display: flex; }

/* line 332, src/assets/css/base.scss */
/* line 523, src/mel/assets/css/base.css */
.pagination li {
    margin: 0 1rem;
    color: slategray;
    display: flex;
    align-items: center; }

/* line 339, src/assets/css/base.scss */
/* line 538, src/mel/assets/css/base.css */
.pagination .active {
    color: #36299f;
    font-weight: bold; }

/* line 344, src/assets/css/base.scss */
/* line 543, src/mel/assets/css/base.css */
.pagination svg {
    fill: slategray; }

/* Checkbox */
/* line 350, src/assets/css/base.scss */
/* line 548, src/mel/assets/css/base.css */
.checkbox {
    position: relative; }

/* line 354, src/assets/css/base.scss */
/* line 552, src/mel/assets/css/base.css */
.checkbox input {
    position: absolute;
    opacity: 0; }

/* line 359, src/assets/css/base.scss */
/* line 557, src/mel/assets/css/base.css */
.checkbox label {
    color: #AAA;
    display: flex;
    align-items: center;
    position: relative;
    cursor: pointer;
    padding: 0;
    transition: .2s color; }

/* line 369, src/assets/css/base.scss */
/* line 577, src/mel/assets/css/base.css */
.checkbox input:checked + label {
    color: #36299f; }

/* line 373, src/assets/css/base.scss */
/* line 581, src/mel/assets/css/base.css */
.checkbox label:before {
    border-radius: 2px;
    transition: .2s;
    content: '';
    margin-right: 3px;
    width: 15px;
    height: 15px;
    background-color: #EEE; }

/* line 383, src/assets/css/base.scss */
/* line 595, src/mel/assets/css/base.css */
.checkbox input:checked + label:after {
    content: '';
    position: absolute;
    left: 3px;
    top: 10px;
    background: white;
    width: 2px;
    height: 2px;
    box-shadow: 2px 0 0 #36299f, 4px 0 0 #36299f, 4px -2px 0 #36299f, 4px -4px 0 #36299f, 4px -6px 0 #36299f, 4px -8px 0 #36299f;
    transform: rotate(45deg); }

/* Radio Button */
/* line 398, src/assets/css/base.scss */
/* line 613, src/mel/assets/css/base.css */
input[type="radio"] {
    position: absolute;
    opacity: 0; }

/* line 403, src/assets/css/base.scss */
/* line 618, src/mel/assets/css/base.css */
input[type="radio"] + label {
    cursor: pointer;
    margin-right: .5rem; }

/* line 408, src/assets/css/base.scss */
/* line 623, src/mel/assets/css/base.css */
input[type="radio"] + label:before {
    content: '';
    background: #F3F6F9;
    border-radius: 100%;
    border: 1px solid #E3E6E9;
    display: inline-block;
    width: 12px;
    height: 12px;
    position: relative;
    margin-right: 3px;
    vertical-align: middle;
    transition: all .2s ease; }

/* line 422, src/assets/css/base.scss */
/* line 641, src/mel/assets/css/base.css */
input[type="radio"]:hover + label:before, input[type="radio"]:checked + label:before {
    border-color: #2869bd !important;
    background-color: #2869bd !important;
    box-shadow: inset 0 0 0 2px #DDD; }

/* line 428, src/assets/css/base.scss */
/* line 649, src/mel/assets/css/base.css */
input[type="radio"]:focus + label:before {
    outline: none; }

/* line 432, src/assets/css/base.scss */
/* line 653, src/mel/assets/css/base.css */
input[type="radio"]:disabled + label {
    cursor: auto; }

/* line 436, src/assets/css/base.scss */
/* line 657, src/mel/assets/css/base.css */
input[type="radio"]:disabled:checked + label:before {
    box-shadow: inset 0 0 0 2px #f4f4f4;
    border-color: #b4b4b4;
    background: #b4b4b4; }

/* line 442, src/assets/css/base.scss */
/* line 665, src/mel/assets/css/base.css */
input[type="radio"]:disabled + label:before {
    border-color: #b4b4b4;
    background: #f4f4f4; }

/* line 447, src/assets/css/base.scss */
/* line 670, src/mel/assets/css/base.css */
input[type="radio"] + label:empty:before {
    margin-right: 0; }

/* line 451, src/assets/css/base.scss */
/* line 674, src/mel/assets/css/base.css */
.input-comment {
    flex: 1 1 100% !important; }

/*selectbox*/
/* line 457, src/assets/css/base.scss */
/* line 683, src/mel/assets/css/base.css */
select {
    background-color: transparent;
    display: flex;
    flex: 1 1 auto;
    -webkit-appearance: none;
    padding: .7rem 2rem .7rem .7rem;
    height: auto;
    border: 0;
    font: 15px/1.5 'NanumSquare';
    outline: 0;
    box-sizing: border-box; }

/* line 470, src/assets/css/base.scss */
/* line 706, src/mel/assets/css/base.css */
select::-ms-expand {
    display: none; }

/* line 474, src/assets/css/base.scss */
/* line 710, src/mel/assets/css/base.css */
.selectbox {
    position: relative;
    background-color: white;
    box-sizing: border-box;
    border: 1px solid var(--secondaryColor);
    border-radius: .3rem; }

/* line 482, src/assets/css/base.scss */
/* line 722, src/mel/assets/css/base.css */
.selectbox::before {
    content: "";
    position: absolute;
    top: 50%;
    right: 1rem;
    width: 0;
    height: 0;
    margin-top: -7px;
    border: solid black;
    border-width: 0 1px 1px 0;
    display: inline-block;
    padding: 4px;
    transform: rotate(45deg);
    -webkit-transform: rotate(45deg); }

/*table*/
/* line 499, src/assets/css/base.scss */
/* line 741, src/mel/assets/css/base.css */
.table {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto 1rem; }

/* line 505, src/assets/css/base.scss */
/* line 747, src/mel/assets/css/base.css */
.table .row {
    flex: 1 1 auto;
    display: flex;
    align-items: center;
    text-align: center;
    padding: .7rem;
    background: white;
    border-radius: .5rem;
    margin: .5rem 0;
    position: relative;
    cursor: pointer;
    -webkit-animation: fadeIn .8s forwards;
    animation: fadeIn .8s forwards; }

/* line 519, src/assets/css/base.scss */
/* line 777, src/mel/assets/css/base.css */
.container:not(.dark-mode) .table .row:not(.th) {
    border: 1px solid var(--secondaryColor); }

/* line 523, src/assets/css/base.scss */
/* line 781, src/mel/assets/css/base.css */
.table .row span {
    color: #5e5c67;
    align-items: center;
    display: flex;
    justify-content: center; }

/* line 530, src/assets/css/base.scss */
/* line 800, src/mel/assets/css/base.css */
.table .th {
    border-radius: 0;
    background: transparent !important;
    padding-bottom: 0; }

/* line 536, src/assets/css/base.scss */
/* line 808, src/mel/assets/css/base.css */
.table .th span {
    font: 12px/1.5 'Comfortaa';
    color: slategray !important; }

/* =====================================================
   Toggle buttons
   ===================================================== */
/* line 545, src/assets/css/base.scss */
/* line 816, src/mel/assets/css/base.css */
.toggle {
    display: block;
    text-align: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none; }

/* line 551, src/assets/css/base.scss */
/* line 825, src/mel/assets/css/base.css */
.toggle-checkbox {
    display: none; }

/* line 555, src/assets/css/base.scss */
/* line 829, src/mel/assets/css/base.css */
.toggle-button {
    display: block;
    background-color: var(--charcoal);
    margin: 0 auto;
    font-size: 1.4em;
    transition: .2s; }

/* line 563, src/assets/css/base.scss */
/* line 839, src/mel/assets/css/base.css */
.toggle-button:hover {
    cursor: pointer; }

/* line 567, src/assets/css/base.scss */
/* line 843, src/mel/assets/css/base.css */
.toggle .toggle-button {
    position: relative;
    height: 22px;
    width: 36px;
    border-radius: 25px; }

/* line 574, src/assets/css/base.scss */
/* line 852, src/mel/assets/css/base.css */
.toggle .toggle-feature {
    display: block;
    position: absolute;
    top: 3px;
    left: 3px;
    fill: white;
    border-radius: 50%;
    transition: .2s; }

/* line 584, src/assets/css/base.scss */
/* line 866, src/mel/assets/css/base.css */
.toggle .toggle-checkbox:checked + .toggle-button {
    background-color: var(--brightPurple);
    fill: white; }

/* line 589, src/assets/css/base.scss */
/* line 871, src/mel/assets/css/base.css */
.toggle .toggle-checkbox:checked + .toggle-button > * {
    left: 16px; }

/* =====================================================
   Modal
   ===================================================== */
/* line 597, src/assets/css/base.scss */
/* line 878, src/mel/assets/css/base.css */
.modal {
    width: 90%;
    max-height: 60%;
    position: relative;
    top: 50%;
    left: 50%;
    background: white;
    display: flex;
    flex-direction: column;
    transform: translate(-50%, -50%);
    border-radius: .5rem;
    transition: .25s;
    box-sizing: border-box;
    overflow: hidden; }

/* line 613, src/assets/css/base.scss */
/* line 913, src/mel/assets/css/base.css */
.overlay {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background: rgba(0, 0, 0, 0.3);
    transition: opacity 500ms;
    visibility: hidden;
    opacity: 0; }

/* line 625, src/assets/css/base.scss */
/* line 927, src/mel/assets/css/base.css */
.overlay:target {
    opacity: 1;
    visibility: visible;
    pointer-events: auto;
    z-index: 50; }

/* line 632, src/assets/css/base.scss */
/* line 934, src/mel/assets/css/base.css */
.dimmed {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background: rgba(0, 0, 0, 0.3);
    transition: opacity 500ms;
    pointer-events: auto;
    z-index: 50; }

/* line 644, src/assets/css/base.scss */
/* line 948, src/mel/assets/css/base.css */
.modal section {
    padding: 0 1rem 1rem 1rem;
    flex: 1 1 auto;
    overflow-y: auto; }

/* line 650, src/assets/css/base.scss */
/* line 958, src/mel/assets/css/base.css */
.modal .title {
    padding: 1rem;
    display: flex;
    justify-content: space-between; }

/* Scrollbar */
/* line 658, src/assets/css/base.scss */
/* line 973, src/mel/assets/css/base.css */
::-webkit-scrollbar-track {
    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
    border-radius: 6px;
    background-color: #eee; }

/* line 664, src/assets/css/base.scss */
/* line 980, src/mel/assets/css/base.css */
::-webkit-scrollbar {
    width: 6px;
    height: 6px;
    background-color: #eee; }

/* line 670, src/assets/css/base.scss */
/* line 986, src/mel/assets/css/base.css */
::-webkit-scrollbar-thumb {
    border-radius: 6px;
    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
    background-color: #a3a6a9; }

@-webkit-keyframes fadeIn {
    0% {
        opacity: 0; }
    100% {
        opacity: 1; } }

@keyframes fadeIn {
    0% {
        opacity: 0; }
    100% {
        opacity: 1; } }

/* =====================================================
   Dark mode
   ===================================================== */
/* line 690, src/assets/css/base.scss */
/* line 1014, src/mel/assets/css/base.css */
.dark-mode {
    background-color: var(--darkmodePrimaryColor);
    color: white; }

/* line 695, src/assets/css/base.scss */
/* line 1019, src/mel/assets/css/base.css */
.dark-mode a {
    color: white; }

/* line 699, src/assets/css/base.scss */
/* line 1023, src/mel/assets/css/base.css */
.dark-mode .button-cancel {
    background-color: var(--darkmodeTertiaryColor);
    color: white; }

/* line 704, src/assets/css/base.scss */
/* line 1028, src/mel/assets/css/base.css */
.dark-mode p, .dark-mode label {
    color: #d0d3dc !important; }

/* line 708, src/assets/css/base.scss */
/* line 1032, src/mel/assets/css/base.css */
.dark-mode input {
    background-color: var(--charcoal);
    border: 0;
    color: white; }

/* line 714, src/assets/css/base.scss */
/* line 1038, src/mel/assets/css/base.css */
.dark-mode select {
    color: white; }

/* line 718, src/assets/css/base.scss */
/* line 1042, src/mel/assets/css/base.css */
.dark-mode option {
    color: var(--darkmodePrimaryColor); }

/* line 722, src/assets/css/base.scss */
/* line 1046, src/mel/assets/css/base.css */
.dark-mode .selectbox {
    background-color: #484c5a !important;
    border: 0; }

/* line 727, src/assets/css/base.scss */
/* line 1051, src/mel/assets/css/base.css */
.dark-mode .selectbox::before {
    border: solid var(--secondaryColor);
    border-width: 0 1px 1px 0; }

/* line 732, src/assets/css/base.scss */
/* line 1056, src/mel/assets/css/base.css */
.dark-mode header {
    border-color: var(--darkmodeSecondaryColor); }

/* line 736, src/assets/css/base.scss */
/* line 1060, src/mel/assets/css/base.css */
.dark-mode .menu {
    background-color: var(--darkmodePrimaryColor);
    color: white;
    border-color: #393b40; }

/* line 742, src/assets/css/base.scss */
/* line 1066, src/mel/assets/css/base.css */
.dark-mode .menu a {
    color: #ccc;
    transition: .2s color; }

/* line 750, src/assets/css/base.scss */
/* line 1073, src/mel/assets/css/base.css */
.dark-mode .content-view {
    background-color: var(--darkmodeSecondaryColor);
    border-radius: 1rem;
    padding: 2rem;
    box-sizing: border-box; }

/* line 757, src/assets/css/base.scss */
/* line 1084, src/mel/assets/css/base.css */
.dark-mode svg {
    fill: rgba(255, 255, 255, 0.3); }

/* line 761, src/assets/css/base.scss */
/* line 1088, src/mel/assets/css/base.css */
.dark-mode .table .row {
    background-color: var(--darkmodeSecondaryColor);
    transition: background-color .2s; }

/* line 766, src/assets/css/base.scss */
/* line 1095, src/mel/assets/css/base.css */
.dark-mode .table .row:not(.th):hover {
    background-color: var(--charcoal); }

/* line 770, src/assets/css/base.scss */
/* line 1099, src/mel/assets/css/base.css */
.dark-mode .table .row span {
    color: #d0d3dc; }

/* line 774, src/assets/css/base.scss */
/* line 1103, src/mel/assets/css/base.css */
.dark-mode input[type="radio"] + label:before {
    background-color: #373a46;
    border-color: var(--darkmodePrimaryColor); }

/* line 779, src/assets/css/base.scss */
/* line 1108, src/mel/assets/css/base.css */
.dark-mode input[type="radio"]:hover + label:before, .dark-mode input[type="radio"]:checked + label:before {
    box-shadow: inset 0 0 0 2px var(--darkmodePrimaryColor); }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
