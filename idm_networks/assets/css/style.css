@import url("https://use.typekit.net/euz1eqv.css");
/* line 4, src/idm_networks/assets/css/style.scss */
.scroll-to-top {
    opacity: 0;
    position: fixed;
    bottom: 3rem;
    right: 3rem;
    transform: translateY(6rem);
    background: lightseagreen;
    width: 3rem;
    height: 3rem;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 3rem;
    z-index: 10;
    transition: .4s ease-in-out;
    z-index: 10; }
    /* line 21, src/idm_networks/assets/css/style.scss */
    .scroll-to-top.active {
        opacity: 1;
        transform: translateY(0); }

/* line 27, src/idm_networks/assets/css/style.scss */
h1 {
    font-size: 4rem;
    font-family: "Poppins-Semibold";
    text-transform: capitalize;
    margin-bottom: 2rem; }

/* line 34, src/idm_networks/assets/css/style.scss */
main {
    flex-direction: column;
    transition: background-color 0.4s;
    overflow-x: hidden;
    word-break: keep-all; }

/* line 41, src/idm_networks/assets/css/style.scss */
header {
    flex: 0 0 60px;
    align-content: center;
    height: 60px;
    position: fixed;
    display: flex;
    justify-content: space-between;
    width: 100%;
    z-index: 90;
    transition: 0.4s; }
    /* line 52, src/idm_networks/assets/css/style.scss */
    header.scroll {
        background: rgba(8, 37, 43, 0.8); }
        /* line 55, src/idm_networks/assets/css/style.scss */
        header.scroll .logo {
            transition: 0s; }
    /* line 60, src/idm_networks/assets/css/style.scss */
    header .logo {
        margin: 1rem;
        font-family: "Blinker", sans-serif;
        font-size: 1.5rem; }
    /* line 66, src/idm_networks/assets/css/style.scss */
    header a {
        color: white;
        height: 100%; }
    /* line 73, src/idm_networks/assets/css/style.scss */
    header .menu li a {
        font-size: 16px;
        padding: 0 2rem;
        text-transform: capitalize;
        transition: 0.4s; }
    @media screen and (min-width: 768px) {
        /* line 84, src/idm_networks/assets/css/style.scss */
        header header .menu {
            position: absolute;
            left: 50%;
            transform: translateX(-50%);
            height: 60px; } }
    /* line 93, src/idm_networks/assets/css/style.scss */
    header .hamburger-menu {
        display: none !important;
        position: absolute;
        right: 0.25rem;
        top: 0.25rem; }
        /* line 99, src/idm_networks/assets/css/style.scss */
        header .hamburger-menu svg {
            width: 3rem;
            height: 3rem;
            -webkit-tap-highlight-color: transparent;
            transition: transform 0.4s;
            -webkit-user-select: none;
            -moz-user-select: none;
            user-select: none;
            cursor: pointer; }
            /* line 107, src/idm_networks/assets/css/style.scss */
            header .hamburger-menu svg path {
                fill: none;
                transition: stroke-dasharray 400ms, stroke-dashoffset 400ms;
                stroke: white;
                stroke-width: 5.5;
                stroke-linecap: round; }
                /* line 114, src/idm_networks/assets/css/style.scss */
                header .hamburger-menu svg path:first-of-type {
                    stroke-dasharray: 40 139; }
                /* line 118, src/idm_networks/assets/css/style.scss */
                header .hamburger-menu svg path:last-of-type {
                    stroke-dasharray: 40 180; }
    /* line 127, src/idm_networks/assets/css/style.scss */
    header.active .hamburger-menu svg {
        transform: rotate(45deg); }
        /* line 130, src/idm_networks/assets/css/style.scss */
        header.active .hamburger-menu svg:first-of-type {
            stroke-dashoffset: -98px; }
        /* line 134, src/idm_networks/assets/css/style.scss */
        header.active .hamburger-menu svg:last-of-type {
            stroke-dashoffset: -138px; }

/* line 142, src/idm_networks/assets/css/style.scss */
.main {
    background-color: #08252b;
    color: white; }
    /* line 146, src/idm_networks/assets/css/style.scss */
    .main::before {
        content: "";
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        width: 100%;
        height: 100%;
        background-image: url("https://images.unsplash.com/photo-1614850715973-58c3167b30a0?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=2550&q=80");
        background-size: cover;
        opacity: 0.1; }
    /* line 160, src/idm_networks/assets/css/style.scss */
    .main a {
        color: white; }
    /* line 164, src/idm_networks/assets/css/style.scss */
    .main section {
        margin-top: 10rem;
        opacity: 0;
        transition: 0.4s; }
        /* line 169, src/idm_networks/assets/css/style.scss */
        .main section:last-of-type {
            margin-bottom: 10rem; }
    /* line 174, src/idm_networks/assets/css/style.scss */
    .main h1 {
        position: relative; }
        /* line 177, src/idm_networks/assets/css/style.scss */
        .main h1::before {
            content: "";
            width: 20rem;
            height: 1px;
            position: absolute;
            left: -25rem;
            top: 50%;
            transform: translateY(-50%);
            background-color: white; }
    /* line 189, src/idm_networks/assets/css/style.scss */
    .main footer {
        opacity: 0;
        background-color: transparent; }
    /* line 194, src/idm_networks/assets/css/style.scss */
    .main .slider {
        position: relative;
        max-width: none;
        height: 60vh;
        width: 100%;
        margin: 0;
        -webkit-user-select: none;
        -moz-user-select: none;
        user-select: none;
        overflow: hidden; }
        /* line 203, src/idm_networks/assets/css/style.scss */
        .main .slider img {
            opacity: 0.5; }
        /* line 207, src/idm_networks/assets/css/style.scss */
        .main .slider .text {
            margin-top: 15vh;
            color: white;
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            z-index: 3; }
            /* line 217, src/idm_networks/assets/css/style.scss */
            .main .slider .text .title {
                font-size: 60px;
                font-family: "Montserrat-ExtraLight", sans-serif;
                margin-bottom: 2rem;
                line-height: 1; }
                /* line 223, src/idm_networks/assets/css/style.scss */
                .main .slider .text .title strong {
                    font-family: "Montserrat", sans-serif;
                    display: block; }
            /* line 229, src/idm_networks/assets/css/style.scss */
            .main .slider .text p {
                font-size: 17px; }
            /* line 233, src/idm_networks/assets/css/style.scss */
            .main .slider .text button {
                font-family: Montserrat;
                padding: 1rem 2rem;
                background: lightseagreen;
                margin-top: 3rem;
                width: 160px;
                border-radius: 5rem;
                justify-content: center; }
        /* line 244, src/idm_networks/assets/css/style.scss */
        .main .slider .main-slider {
            width: 100%;
            height: 100%; }
            /* line 248, src/idm_networks/assets/css/style.scss */
            .main .slider .main-slider .slick-slide {
                width: 100%;
                height: 800px;
                background-size: cover; }
            /* line 254, src/idm_networks/assets/css/style.scss */
            .main .slider .main-slider .slick-dots {
                bottom: 2rem; }
            /* line 258, src/idm_networks/assets/css/style.scss */
            .main .slider .main-slider .slick-dots li button:before {
                font-size: 3rem;
                color: white; }
            /* line 263, src/idm_networks/assets/css/style.scss */
            .main .slider .main-slider .slick-dots li.slick-active button:before {
                opacity: 1; }
            /* line 267, src/idm_networks/assets/css/style.scss */
            .main .slider .main-slider .slick-prev,
            .main .slider .main-slider .slick-next {
                display: block;
                right: 0rem;
                left: auto;
                top: auto;
                bottom: -3rem;
                z-index: 10;
                border-radius: 0;
                width: 5rem;
                height: 5rem;
                background-color: #022c35;
                transition: 0.4s; }
                /* line 281, src/idm_networks/assets/css/style.scss */
                .main .slider .main-slider .slick-prev::before,
                .main .slider .main-slider .slick-next::before {
                    content: "";
                    position: absolute;
                    top: 50%;
                    left: 50%;
                    width: 0;
                    height: 0;
                    margin-top: -9px;
                    margin-left: -9px;
                    border: solid white;
                    border-width: 0 1px 1px 0;
                    display: inline-block;
                    padding: 6px;
                    transform: rotate(-45deg); }
                /* line 297, src/idm_networks/assets/css/style.scss */
                .main .slider .main-slider .slick-prev:hover,
                .main .slider .main-slider .slick-next:hover {
                    background: #022c35;
                    opacity: 1; }
            /* line 303, src/idm_networks/assets/css/style.scss */
            .main .slider .main-slider .slick-prev {
                right: 5rem;
                margin-right: 1px;
                background: rgba(255, 255, 255, 0.1); }
                /* line 308, src/idm_networks/assets/css/style.scss */
                .main .slider .main-slider .slick-prev::before {
                    transform: rotate(135deg);
                    margin-left: -3px; }
    /* line 316, src/idm_networks/assets/css/style.scss */
    .main .solutions {
        opacity: 1;
        -webkit-user-select: none;
        -moz-user-select: none;
        user-select: none; }
        /* line 320, src/idm_networks/assets/css/style.scss */
        .main .solutions .cards {
            display: flex;
            justify-content: space-between;
            margin: -0.5rem; }
            /* line 325, src/idm_networks/assets/css/style.scss */
            .main .solutions .cards .card {
                position: relative;
                flex: 1 1 25%;
                font-weight: 300;
                padding: 7rem 1.5rem;
                margin: 0.5rem;
                border-radius: 0.5rem;
                cursor: pointer;
                overflow: hidden;
                transition: 0.4s; }
                /* line 336, src/idm_networks/assets/css/style.scss */
                .main .solutions .cards .card::before {
                    content: "";
                    display: block;
                    position: absolute;
                    top: 0;
                    left: 0;
                    width: 100%;
                    height: 100%;
                    background: url("../images/background/01.jpg") no-repeat center;
                    background-size: cover;
                    opacity: 0.15;
                    z-index: -1; }
                /* line 350, src/idm_networks/assets/css/style.scss */
                .main .solutions .cards .card::after {
                    content: "";
                    display: block;
                    position: absolute;
                    top: 3rem;
                    left: 1.5rem;
                    width: 3rem;
                    height: 3rem;
                    background-size: cover; }
                /* line 361, src/idm_networks/assets/css/style.scss */
                .main .solutions .cards .card:nth-of-type(1) {
                    -webkit-animation-delay: 0.2s;
                    animation-delay: 0.2s; }
                    /* line 364, src/idm_networks/assets/css/style.scss */
                    .main .solutions .cards .card:nth-of-type(1)::after {
                        background-image: url("../images/icon/emergency_call.png"); }
                /* line 369, src/idm_networks/assets/css/style.scss */
                .main .solutions .cards .card:nth-of-type(2) {
                    -webkit-animation-delay: 0.2s;
                    animation-delay: 0.2s; }
                    /* line 372, src/idm_networks/assets/css/style.scss */
                    .main .solutions .cards .card:nth-of-type(2)::after {
                        background-image: url("../images/icon/ip_telephony.png"); }
                /* line 377, src/idm_networks/assets/css/style.scss */
                .main .solutions .cards .card:nth-of-type(3) {
                    -webkit-animation-delay: 0.4s;
                    animation-delay: 0.4s; }
                    /* line 380, src/idm_networks/assets/css/style.scss */
                    .main .solutions .cards .card:nth-of-type(3)::after {
                        background-image: url("../images/icon/ip_contact_center.png"); }
                /* line 385, src/idm_networks/assets/css/style.scss */
                .main .solutions .cards .card:nth-of-type(4) {
                    -webkit-animation-delay: 0.6s;
                    animation-delay: 0.6s; }
                    /* line 388, src/idm_networks/assets/css/style.scss */
                    .main .solutions .cards .card:nth-of-type(4)::after {
                        background-image: url("../images/icon/terminals.png"); }
                /* line 393, src/idm_networks/assets/css/style.scss */
                .main .solutions .cards .card:hover {
                    transform: translateY(-10px);
                    box-shadow: 3px 5px 3rem rgba(0, 0, 0, 0.5);
                    z-index: 10; }
                    /* line 398, src/idm_networks/assets/css/style.scss */
                    .main .solutions .cards .card:hover button {
                        border-color: white; }
            /* line 404, src/idm_networks/assets/css/style.scss */
            .main .solutions .cards .title {
                font-size: 2rem;
                font-family: "Oswald";
                margin-bottom: 1rem;
                line-height: 1.2; }
            /* line 411, src/idm_networks/assets/css/style.scss */
            .main .solutions .cards li {
                font-size: 14px;
                opacity: 0.5; }
            /* line 416, src/idm_networks/assets/css/style.scss */
            .main .solutions .cards button {
                position: absolute;
                bottom: 1.5rem;
                right: 1.5rem;
                width: 3rem;
                height: 3rem;
                display: flex;
                justify-content: center;
                border: 1px solid rgba(255, 255, 255, 0.1);
                transition: 0.2s; }
                /* line 427, src/idm_networks/assets/css/style.scss */
                .main .solutions .cards button svg {
                    fill: white; }
    /* line 434, src/idm_networks/assets/css/style.scss */
    .main .flagship-solutions {
        counter-reset: dl;
        flex-direction: column; }
        /* line 438, src/idm_networks/assets/css/style.scss */
        .main .flagship-solutions .solution {
            padding-bottom: 2rem;
            margin-bottom: 2rem;
            display: flex;
            align-items: center;
            justify-content: space-between;
            cursor: pointer;
            position: relative; }
            /* line 447, src/idm_networks/assets/css/style.scss */
            .main .flagship-solutions .solution:not(:last-of-type) {
                border-bottom: 1px solid rgba(255, 255, 255, 0.1); }
            /* line 451, src/idm_networks/assets/css/style.scss */
            .main .flagship-solutions .solution::before {
                counter-increment: dl;
                content: "0" counter(dl);
                position: absolute;
                top: 0.5rem;
                left: -2rem;
                color: lightseagreen; }
            /* line 461, src/idm_networks/assets/css/style.scss */
            .main .flagship-solutions .solution:hover button {
                opacity: 1; }
            /* line 466, src/idm_networks/assets/css/style.scss */
            .main .flagship-solutions .solution dl {
                flex: 1 1 auto; }
                /* line 469, src/idm_networks/assets/css/style.scss */
                .main .flagship-solutions .solution dl dt {
                    font-family: "Oswald";
                    font-size: 24px;
                    text-transform: uppercase;
                    margin-bottom: 1rem; }
                /* line 476, src/idm_networks/assets/css/style.scss */
                .main .flagship-solutions .solution dl dd {
                    opacity: 0.7; }
            /* line 481, src/idm_networks/assets/css/style.scss */
            .main .flagship-solutions .solution button {
                flex: 0 0 3rem;
                background-color: #022c35;
                opacity: 0.5;
                width: 3rem;
                height: 3rem;
                display: flex;
                justify-content: center;
                transition: opacity 0.2s; }
                /* line 491, src/idm_networks/assets/css/style.scss */
                .main .flagship-solutions .solution button svg {
                    fill: white; }

/* line 499, src/idm_networks/assets/css/style.scss */
footer {
    width: 100%;
    padding: 3rem 2rem;
    color: #ddd;
    background-color: #08252b;
    transition: 0.4s;
    position: relative; }
    /* line 507, src/idm_networks/assets/css/style.scss */
    footer::before {
        content: "";
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: url("../images/background/footer.jpg") no-repeat;
        background-size: cover;
        opacity: 0.2; }
    /* line 520, src/idm_networks/assets/css/style.scss */
    footer a {
        color: white; }
    /* line 524, src/idm_networks/assets/css/style.scss */
    footer section {
        opacity: unset !important;
        margin: 2rem auto !important; }
        /* line 528, src/idm_networks/assets/css/style.scss */
        footer section:last-of-type {
            margin-bottom: 0 !important; }
    /* line 533, src/idm_networks/assets/css/style.scss */
    footer .sitemap {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        border-bottom: 1px solid rgba(255, 255, 255, 0.3);
        padding-bottom: 2rem; }
        /* line 540, src/idm_networks/assets/css/style.scss */
        footer .sitemap h3 {
            text-align: left !important;
            margin-bottom: 1rem;
            text-transform: capitalize;
            font-weight: normal; }
        /* line 547, src/idm_networks/assets/css/style.scss */
        footer .sitemap ul {
            flex-direction: column;
            -webkit-user-select: none;
            -moz-user-select: none;
            user-select: none; }
            /* line 551, src/idm_networks/assets/css/style.scss */
            footer .sitemap ul li {
                font-family: "Montserrat-ExtraLight"; }
    /* line 558, src/idm_networks/assets/css/style.scss */
    footer .information ul {
        display: flex; }
        /* line 561, src/idm_networks/assets/css/style.scss */
        footer .information ul li {
            margin-right: 2rem; }
    /* line 567, src/idm_networks/assets/css/style.scss */
    footer .copyright {
        text-align: right; }

/* line 572, src/idm_networks/assets/css/style.scss */
.sub-menu {
    margin: -25px auto 0;
    height: 50px;
    width: 1200px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: #0b0f10;
    border-radius: 0.25rem;
    z-index: 1; }
    /* line 583, src/idm_networks/assets/css/style.scss */
    .sub-menu li {
        color: white;
        flex: 1 1 auto;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        opacity: 0.5;
        transition: 0.4s; }
        /* line 593, src/idm_networks/assets/css/style.scss */
        .sub-menu li:first-of-type:hover, .sub-menu li:first-of-type.active {
            border-radius: 0.25rem 0 0 0.25rem; }
        /* line 598, src/idm_networks/assets/css/style.scss */
        .sub-menu li:last-of-type:hover, .sub-menu li:last-of-type.active {
            border-radius: 0 0.25rem 0.25rem 0; }
        /* line 603, src/idm_networks/assets/css/style.scss */
        .sub-menu li:hover, .sub-menu li.active {
            background-color: lightseagreen;
            color: white;
            opacity: 1; }
            /* line 609, src/idm_networks/assets/css/style.scss */
            .sub-menu li:hover a, .sub-menu li.active a {
                color: white; }
        /* line 614, src/idm_networks/assets/css/style.scss */
        .sub-menu li a {
            color: white;
            height: 100%;
            width: 100%;
            display: flex;
            justify-content: center;
            align-items: center; }

/* line 625, src/idm_networks/assets/css/style.scss */
.sub {
    background-color: white; }
    /* line 628, src/idm_networks/assets/css/style.scss */
    .sub h3 {
        font-size: 1.5rem;
        text-align: center;
        margin-bottom: 2rem; }
    /* line 634, src/idm_networks/assets/css/style.scss */
    .sub .title {
        height: 200px;
        background-color: rgba(8, 37, 43, 0.8);
        position: relative; }
        /* line 639, src/idm_networks/assets/css/style.scss */
        .sub .title::before {
            content: "";
            height: 100%;
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            background: url("../images/background/title.jpg") no-repeat bottom center fixed;
            background-size: cover;
            z-index: -1; }
        /* line 652, src/idm_networks/assets/css/style.scss */
        .sub .title h1 {
            padding-top: 5rem;
            font-size: 3rem;
            color: white; }
    /* line 659, src/idm_networks/assets/css/style.scss */
    .sub .sub-title {
        margin: 2rem 0;
        padding: 1.5rem 0; }
        /* line 663, src/idm_networks/assets/css/style.scss */
        .sub .sub-title h2 {
            font-family: "Poppins-Semibold";
            font-size: 2rem;
            font-weight: normal;
            margin-bottom: 1rem; }
        /* line 670, src/idm_networks/assets/css/style.scss */
        .sub .sub-title small {
            font-size: 1.2rem;
            color: #022c35; }
    /* line 676, src/idm_networks/assets/css/style.scss */
    .sub img {
        max-width: 800px;
        margin: 0 auto;
        border-radius: 0.5rem;
        background-color: white; }
    /* line 683, src/idm_networks/assets/css/style.scss */
    .sub section {
        margin-bottom: 3rem; }
        /* line 686, src/idm_networks/assets/css/style.scss */
        .sub section:last-of-type {
            margin-bottom: 10rem; }
        /* line 690, src/idm_networks/assets/css/style.scss */
        .sub section .slick-slider {
            text-align: center; }
            /* line 693, src/idm_networks/assets/css/style.scss */
            .sub section .slick-slider img {
                padding: 0.5rem;
                max-height: 170px; }

/* ======================================
   about
   ====================================== */
/* line 705, src/idm_networks/assets/css/style.scss */
.about div[data-scroll] {
    width: 100%; }

/* line 709, src/idm_networks/assets/css/style.scss */
.about nav {
    z-index: 10; }
    /* line 712, src/idm_networks/assets/css/style.scss */
    .about nav ul {
        position: fixed;
        margin-top: 15rem;
        margin-left: -10rem; }
        /* line 717, src/idm_networks/assets/css/style.scss */
        .about nav ul li {
            font-size: 18px;
            padding: .5rem 0; }
            /* line 721, src/idm_networks/assets/css/style.scss */
            .about nav ul li.active {
                position: relative; }
                /* line 724, src/idm_networks/assets/css/style.scss */
                .about nav ul li.active ::before {
                    content: "";
                    width: 5px;
                    display: block;
                    height: 100%;
                    background-color: lightseagreen;
                    position: absolute;
                    left: -1rem; }

/* line 738, src/idm_networks/assets/css/style.scss */
.about section {
    margin-bottom: 8rem; }

/* line 742, src/idm_networks/assets/css/style.scss */
.about h2 {
    font-family: "Poppins-Semibold", sans-serif;
    font-size: 2rem;
    margin-bottom: 1rem; }

/* line 748, src/idm_networks/assets/css/style.scss */
.about p:not(:last-of-type) {
    margin-bottom: 1.5rem; }

/* line 752, src/idm_networks/assets/css/style.scss */
.about .introduction {
    margin-bottom: 0 !important; }
    /* line 755, src/idm_networks/assets/css/style.scss */
    .about .introduction li {
        padding-left: 1.5rem; }

/* line 760, src/idm_networks/assets/css/style.scss */
.about .greetings {
    background-color: #eee;
    padding: 3rem; }
    /* line 764, src/idm_networks/assets/css/style.scss */
    .about .greetings h2 {
        font-size: 1.75rem;
        color: darkseagreen; }
    /* line 769, src/idm_networks/assets/css/style.scss */
    .about .greetings .ceo {
        font-weight: bold;
        font-size: 16px;
        text-align: right;
        margin-top: 1rem; }

/* line 777, src/idm_networks/assets/css/style.scss */
.about .history {
    padding: 3rem; }
    /* line 780, src/idm_networks/assets/css/style.scss */
    .about .history::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url(../images/background/03.jpg) no-repeat center;
        opacity: 0.2; }
    /* line 791, src/idm_networks/assets/css/style.scss */
    .about .history h2 {
        flex: 0 0 35%; }
        /* line 794, src/idm_networks/assets/css/style.scss */
        .about .history h2 + div {
            display: flex; }
    /* line 800, src/idm_networks/assets/css/style.scss */
    .about .history .wrapper > div {
        margin: 0 -2.5rem; }
    /* line 804, src/idm_networks/assets/css/style.scss */
    .about .history .wrapper .term {
        flex: 1 1 50%;
        margin: 0 2.5rem; }
        /* line 808, src/idm_networks/assets/css/style.scss */
        .about .history .wrapper .term .sub-title {
            display: flex;
            justify-content: space-between;
            background: #eee;
            padding: 1rem;
            border-radius: 0.5rem; }
        /* line 816, src/idm_networks/assets/css/style.scss */
        .about .history .wrapper .term > div:not(:first-of-type) {
            display: flex;
            padding: 1rem 0;
            margin-bottom: 2rem; }
        /* line 822, src/idm_networks/assets/css/style.scss */
        .about .history .wrapper .term h3 {
            font-size: 1.25rem;
            color: darkolivegreen;
            margin-bottom: 0; }
        /* line 828, src/idm_networks/assets/css/style.scss */
        .about .history .wrapper .term ul {
            margin-left: 2rem; }

/* line 839, src/idm_networks/assets/css/style.scss */
.about .certification-slider img {
    max-width: 300px;
    max-height: none !important; }

/* line 846, src/idm_networks/assets/css/style.scss */
.about .location p {
    line-height: 2; }

/* line 850, src/idm_networks/assets/css/style.scss */
.about .location ul {
    display: flex; }

/* line 854, src/idm_networks/assets/css/style.scss */
.about .location li {
    margin: 1rem 2rem 0 0;
    padding-right: 2rem; }
    /* line 858, src/idm_networks/assets/css/style.scss */
    .about .location li:not(:last-of-type) {
        border-right: 1px solid #eee; }

/* ======================================
   Solutions
   ====================================== */
/* line 870, src/idm_networks/assets/css/style.scss */
.solutions .table .rows {
    display: flex;
    border-bottom: 1px solid #ddd; }
    /* line 874, src/idm_networks/assets/css/style.scss */
    .solutions .table .rows.th {
        font-weight: bold;
        border-top: 3px solid slategray; }
        /* line 878, src/idm_networks/assets/css/style.scss */
        .solutions .table .rows.th li {
            text-align: center !important; }
    /* line 883, src/idm_networks/assets/css/style.scss */
    .solutions .table .rows:last-of-type {
        border-bottom: 3px solid slategray; }

/* line 889, src/idm_networks/assets/css/style.scss */
.solutions .table .column:first-of-type {
    flex: 0 0 200px;
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center; }

/* line 897, src/idm_networks/assets/css/style.scss */
.solutions .table .column:last-of-type {
    flex: 1 1 auto; }

/* line 902, src/idm_networks/assets/css/style.scss */
.solutions .table .column .row:last-of-type {
    border: 0; }

/* line 907, src/idm_networks/assets/css/style.scss */
.solutions .table .column li {
    flex-direction: column; }
    /* line 910, src/idm_networks/assets/css/style.scss */
    .solutions .table .column li:nth-of-type(1) {
        flex: 0 0 20%;
        text-align: center; }
    /* line 915, src/idm_networks/assets/css/style.scss */
    .solutions .table .column li:nth-of-type(2) {
        flex: 0 0 40%; }
        /* line 918, src/idm_networks/assets/css/style.scss */
        .solutions .table .column li:nth-of-type(2) img {
            width: auto;
            max-height: 80px;
            max-width: 200px; }
    /* line 925, src/idm_networks/assets/css/style.scss */
    .solutions .table .column li:nth-of-type(3) {
        flex: 0 0 40%;
        text-align: left; }
        /* line 929, src/idm_networks/assets/css/style.scss */
        .solutions .table .column li:nth-of-type(3) *::before {
            content: "-";
            margin-right: 0.25rem; }

/* line 937, src/idm_networks/assets/css/style.scss */
.solutions .table .row {
    border-bottom: 1px solid #ddd;
    padding: 1.5rem 0; }

/* line 943, src/idm_networks/assets/css/style.scss */
.solutions .advantages {
    counter-reset: test; }
    /* line 946, src/idm_networks/assets/css/style.scss */
    .solutions .advantages ul {
        background-color: #eee;
        padding: 2rem;
        border-radius: 0.5rem; }
        /* line 951, src/idm_networks/assets/css/style.scss */
        .solutions .advantages ul li {
            counter-increment: test; }
            /* line 954, src/idm_networks/assets/css/style.scss */
            .solutions .advantages ul li:not(:last-of-type) {
                margin-bottom: 0.5rem; }
            /* line 958, src/idm_networks/assets/css/style.scss */
            .solutions .advantages ul li::before {
                content: "0" counter(test);
                color: lightseagreen;
                width: 36px;
                display: inline-block; }
            /* line 965, src/idm_networks/assets/css/style.scss */
            .solutions .advantages ul li h4 {
                color: #3b9cff;
                line-height: 2; }

/* line 974, src/idm_networks/assets/css/style.scss */
.solutions .video-conferencing ul {
    display: flex;
    margin: 0 -0.25rem; }
    /* line 978, src/idm_networks/assets/css/style.scss */
    .solutions .video-conferencing ul li {
        flex: 1 1 auto;
        background-color: #eee;
        padding: 1rem;
        margin: 0 0.25rem;
        border-radius: 0.5rem;
        text-align: center; }

/* line 989, src/idm_networks/assets/css/style.scss */
.solutions .reference-sites {
    display: flex;
    align-items: center;
    border: 1px solid #eee;
    padding: 2rem;
    border-radius: 0.5rem;
    justify-content: space-between; }
    /* line 997, src/idm_networks/assets/css/style.scss */
    .solutions .reference-sites h3 {
        margin-bottom: 0; }
    /* line 1001, src/idm_networks/assets/css/style.scss */
    .solutions .reference-sites div {
        display: flex;
        align-items: center; }
        /* line 1005, src/idm_networks/assets/css/style.scss */
        .solutions .reference-sites div button {
            margin-left: 0.5rem;
            padding: 0.5rem 1.25rem;
            background-color: lightseagreen; }
            /* line 1010, src/idm_networks/assets/css/style.scss */
            .solutions .reference-sites div button:hover {
                opacity: 0.7; }

/* line 1017, src/idm_networks/assets/css/style.scss */
.solutions .support {
    display: flex;
    flex-direction: column;
    align-items: center; }
    /* line 1022, src/idm_networks/assets/css/style.scss */
    .solutions .support button {
        font-size: 1.5rem;
        border: 1px solid #ddd;
        padding: 1rem 2rem;
        color: slategray; }
        /* line 1028, src/idm_networks/assets/css/style.scss */
        .solutions .support button svg {
            fill: #e3e6e9;
            margin-right: 0.5rem; }

/* ======================================
   Support
   ====================================== */
/* line 1041, src/idm_networks/assets/css/style.scss */
.support .sub-title {
    margin-bottom: 0;
    padding-bottom: 0; }

/* line 1047, src/idm_networks/assets/css/style.scss */
.support .faq ul {
    border-top: 2px solid slategray;
    border-bottom: 2px solid slategray;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none; }
    /* line 1052, src/idm_networks/assets/css/style.scss */
    .support .faq ul li {
        flex-direction: column; }
        /* line 1056, src/idm_networks/assets/css/style.scss */
        .support .faq ul li.active .question {
            padding: 0.5rem 1rem;
            background-color: #eee;
            color: lightseagreen; }
            /* line 1061, src/idm_networks/assets/css/style.scss */
            .support .faq ul li.active .question::after {
                transform: rotate(-135deg);
                margin-top: -4px; }
        /* line 1067, src/idm_networks/assets/css/style.scss */
        .support .faq ul li.active .answer {
            display: flex; }
        /* line 1073, src/idm_networks/assets/css/style.scss */
        .support .faq ul li:not(:last-of-type) .question,
        .support .faq ul li:not(:last-of-type) .answer {
            border-bottom: 1px solid #ddd; }

/* line 1081, src/idm_networks/assets/css/style.scss */
.support .faq .question {
    flex: 1 1 auto;
    padding: 1rem;
    display: flex;
    align-items: center;
    position: relative;
    cursor: pointer;
    transition: 0.4s; }
    /* line 1090, src/idm_networks/assets/css/style.scss */
    .support .faq .question::before {
        content: "Q";
        color: white;
        font-weight: bold;
        display: flex;
        justify-content: center;
        align-items: center;
        width: 2rem;
        height: 2rem;
        border-radius: 2rem;
        margin-right: 1rem;
        background-color: lightseagreen; }
    /* line 1104, src/idm_networks/assets/css/style.scss */
    .support .faq .question::after {
        content: "";
        position: absolute;
        top: 50%;
        right: 1.5rem;
        width: 0;
        height: 0;
        margin-top: -8px;
        border: solid slategray;
        border-width: 0 2px 2px 0;
        display: inline-block;
        padding: 4px;
        transform: rotate(45deg);
        transition: transform 0.4s; }

/* line 1121, src/idm_networks/assets/css/style.scss */
.support .faq .answer {
    display: none;
    flex-direction: column;
    color: slategray;
    padding: 1rem 1rem 1rem 4rem;
    transition: 0.4s; }

/* line 1130, src/idm_networks/assets/css/style.scss */
.support .contacts {
    margin-bottom: 5rem; }
    /* line 1133, src/idm_networks/assets/css/style.scss */
    .support .contacts .file-path {
        margin-left: 1rem; }

/* line 1139, src/idm_networks/assets/css/style.scss */
.inputs {
    border-top: 2px solid #333;
    border-bottom: 2px solid #333;
    margin-bottom: 3rem; }
    /* line 1144, src/idm_networks/assets/css/style.scss */
    .inputs ul {
        margin-bottom: 1rem;
        padding-bottom: 1rem;
        display: flex;
        align-items: center; }
        /* line 1150, src/idm_networks/assets/css/style.scss */
        .inputs ul:first-of-type {
            margin-top: 1rem; }
        /* line 1154, src/idm_networks/assets/css/style.scss */
        .inputs ul:last-of-type {
            padding-bottom: 0; }
        /* line 1158, src/idm_networks/assets/css/style.scss */
        .inputs ul:not(:last-of-type) {
            border-bottom: 1px solid #eee; }
        /* line 1163, src/idm_networks/assets/css/style.scss */
        .inputs ul li:first-of-type {
            flex: 0 0 10rem; }
        /* line 1167, src/idm_networks/assets/css/style.scss */
        .inputs ul li:last-of-type {
            display: flex;
            align-items: center;
            flex: 1 1 auto; }
        /* line 1174, src/idm_networks/assets/css/style.scss */
        .inputs ul input {
            background: #eee; }
        /* line 1178, src/idm_networks/assets/css/style.scss */
        .inputs ul .checkbox {
            margin-right: 1rem; }
        /* line 1183, src/idm_networks/assets/css/style.scss */
        .inputs ul.input-title input {
            flex: 1 1 auto; }
        /* line 1191, src/idm_networks/assets/css/style.scss */
        .inputs ul.phone span, .inputs ul.email span, .inputs ul.file span {
            margin: 0 0.5rem; }
            /* line 1194, src/idm_networks/assets/css/style.scss */
            .inputs ul.phone span.important, .inputs ul.email span.important, .inputs ul.file span.important {
                color: darkseagreen;
                font-size: 14px; }
        /* line 1202, src/idm_networks/assets/css/style.scss */
        .inputs ul.textarea textarea {
            flex: 1 1 auto;
            background: #eee; }
    /* line 1209, src/idm_networks/assets/css/style.scss */
    .inputs .btn-file {
        position: relative;
        margin-right: 0.5rem;
        background-color: slategray;
        font-size: 13px;
        font-family: "Nanumsquare";
        padding: 0.5rem 1rem; }
        /* line 1217, src/idm_networks/assets/css/style.scss */
        .inputs .btn-file::after {
            content: attr(data-text);
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0; }
        /* line 1226, src/idm_networks/assets/css/style.scss */
        .inputs .btn-file input {
            position: absolute;
            top: 0;
            right: 0;
            margin: 0;
            padding: 0;
            z-index: 10;
            font-size: 20px;
            cursor: pointer;
            height: 36px;
            opacity: 0;
            filter: alpha(opacity=0); }
    /* line 1241, src/idm_networks/assets/css/style.scss */
    .inputs + button {
        font-size: 18px;
        font-family: "NanumSquare-Regular", sans-serif;
        background: lightseagreen;
        padding: 1.5rem 3rem;
        width: 300px;
        margin: 0 auto;
        display: flex;
        justify-content: center; }

@-webkit-keyframes moveDown {
    0% {
        opacity: 0;
        transform: translateY(-30px); }
    100% {
        opacity: 1;
        transform: translateY(0); } }

@keyframes moveDown {
    0% {
        opacity: 0;
        transform: translateY(-30px); }
    100% {
        opacity: 1;
        transform: translateY(0); } }

@media screen and (max-width: 1600px) {
    /* line 1265, src/idm_networks/assets/css/style.scss */
    .wrapper {
        width: 960px; } }

@media (max-width: 767px) {
    /* line 1271, src/idm_networks/assets/css/style.scss */
    div[data-scroll] {
        -webkit-overflow-scrolling: touch; }
    /* line 1275, src/idm_networks/assets/css/style.scss */
    .scroll-to-top {
        right: 1rem;
        bottom: 1rem;
        width: 2.5rem;
        height: 2.5rem; }
    /* line 1283, src/idm_networks/assets/css/style.scss */
    h1 {
        font-size: 3rem;
        margin-bottom: 1rem; }
    /* line 1288, src/idm_networks/assets/css/style.scss */
    .wrapper {
        width: 100%;
        padding: 1rem; }
    /* line 1293, src/idm_networks/assets/css/style.scss */
    header {
        transition: all 0.3s ease-out, background 1s ease-out;
        justify-content: flex-start;
        flex-direction: column;
        overflow: hidden;
        z-index: 1; }
        /* line 1300, src/idm_networks/assets/css/style.scss */
        header.active {
            background: rgba(8, 37, 43, 0.9); }
        /* line 1304, src/idm_networks/assets/css/style.scss */
        header.scroll {
            -webkit-backdrop-filter: blur(10px);
            backdrop-filter: blur(10px); }
            /* line 1307, src/idm_networks/assets/css/style.scss */
            header.scroll .logo {
                margin: 1rem; }
        /* line 1312, src/idm_networks/assets/css/style.scss */
        header .hamburger-menu {
            display: flex !important;
            align-items: center; }
        /* line 1317, src/idm_networks/assets/css/style.scss */
        header .language {
            display: none; }
        /* line 1321, src/idm_networks/assets/css/style.scss */
        header > a {
            flex: 0 0 24px;
            display: flex;
            justify-content: space-between; }
        /* line 1327, src/idm_networks/assets/css/style.scss */
        header .menu {
            opacity: 0;
            flex-direction: column;
            transition: 0.4s;
            z-index: -1; }
            /* line 1333, src/idm_networks/assets/css/style.scss */
            header .menu li {
                opacity: 0;
                width: 100%;
                border-bottom: 1px solid rgba(255, 255, 255, 0.1);
                transform: scale(1.15) translateY(-30px);
                transition: transform 0.5s cubic-bezier(0.4, 0.01, 0.165, 0.99), opacity 0.6s cubic-bezier(0.4, 0.01, 0.165, 0.99); }
                /* line 1341, src/idm_networks/assets/css/style.scss */
                header .menu li:nth-child(1) {
                    transition-delay: 0.49s; }
                /* line 1345, src/idm_networks/assets/css/style.scss */
                header .menu li:nth-child(2) {
                    transition-delay: 0.42s; }
                /* line 1349, src/idm_networks/assets/css/style.scss */
                header .menu li:nth-child(3) {
                    transition-delay: 0.35s; }
                /* line 1353, src/idm_networks/assets/css/style.scss */
                header .menu li:nth-child(4) {
                    transition-delay: 0.28s; }
                /* line 1357, src/idm_networks/assets/css/style.scss */
                header .menu li:nth-child(5) {
                    transition-delay: 0.21s; }
                /* line 1361, src/idm_networks/assets/css/style.scss */
                header .menu li a {
                    font-size: 1.25rem;
                    padding: 1rem 2rem; }
        /* line 1368, src/idm_networks/assets/css/style.scss */
        header.active {
            height: 100%;
            transition: all 0.3s ease-in, background 0.5s ease-in;
            transition-delay: 0.25s; }
            /* line 1373, src/idm_networks/assets/css/style.scss */
            header.active + div {
                filter: blur(10px); }
            /* line 1377, src/idm_networks/assets/css/style.scss */
            header.active .menu {
                opacity: 1;
                width: 100%; }
                /* line 1381, src/idm_networks/assets/css/style.scss */
                header.active .menu li {
                    transform: scale(1) translateY(0px);
                    opacity: 1; }
                    /* line 1385, src/idm_networks/assets/css/style.scss */
                    header.active .menu li:nth-child(1) {
                        transition-delay: 0.27s; }
                    /* line 1389, src/idm_networks/assets/css/style.scss */
                    header.active .menu li:nth-child(2) {
                        transition-delay: 0.34s; }
                    /* line 1393, src/idm_networks/assets/css/style.scss */
                    header.active .menu li:nth-child(3) {
                        transition-delay: 0.41s; }
                    /* line 1397, src/idm_networks/assets/css/style.scss */
                    header.active .menu li:nth-child(4) {
                        transition-delay: 0.48s; }
                    /* line 1401, src/idm_networks/assets/css/style.scss */
                    header.active .menu li:nth-child(5) {
                        transition-delay: 0.55s; }
                    /* line 1405, src/idm_networks/assets/css/style.scss */
                    header.active .menu li:nth-child(6) {
                        transition-delay: 0.62s; }
                    /* line 1409, src/idm_networks/assets/css/style.scss */
                    header.active .menu li:nth-child(7) {
                        transition-delay: 0.69s; }
        /* line 1416, src/idm_networks/assets/css/style.scss */
        header + div {
            transition: 0.4s; }
    /* line 1421, src/idm_networks/assets/css/style.scss */
    .sub-menu {
        flex-direction: column;
        width: 90%;
        height: auto;
        margin-top: -3rem; }
        /* line 1427, src/idm_networks/assets/css/style.scss */
        .sub-menu li {
            width: 100%; }
            /* line 1430, src/idm_networks/assets/css/style.scss */
            .sub-menu li a {
                padding: 0.75rem; }
            /* line 1434, src/idm_networks/assets/css/style.scss */
            .sub-menu li:first-of-type:hover, .sub-menu li:first-of-type.active {
                border-radius: 0.25rem 0.25rem 0 0; }
            /* line 1439, src/idm_networks/assets/css/style.scss */
            .sub-menu li:last-of-type:hover, .sub-menu li:last-of-type.active {
                border-radius: 0 0 0.25rem 0.25rem; }
    /* line 1446, src/idm_networks/assets/css/style.scss */
    .tab-content {
        margin-top: 0; }
        /* line 1449, src/idm_networks/assets/css/style.scss */
        .tab-content .sub-title {
            margin: 0 0 1rem; }
            /* line 1452, src/idm_networks/assets/css/style.scss */
            .tab-content .sub-title h2 {
                font-size: 2rem; }
    /* line 1459, src/idm_networks/assets/css/style.scss */
    .main section {
        margin-top: 3rem; }
        /* line 1462, src/idm_networks/assets/css/style.scss */
        .main section:last-of-type {
            margin-bottom: 3rem; }
    /* line 1467, src/idm_networks/assets/css/style.scss */
    .main .slider {
        height: 80vh !important; }
        /* line 1471, src/idm_networks/assets/css/style.scss */
        .main .slider .text .title {
            font-size: 2.8rem !important;
            line-height: 1; }
        /* line 1477, src/idm_networks/assets/css/style.scss */
        .main .slider img {
            width: auto;
            height: 80vh; }
    /* line 1484, src/idm_networks/assets/css/style.scss */
    .main .solutions .cards {
        flex-direction: column; }
        /* line 1487, src/idm_networks/assets/css/style.scss */
        .main .solutions .cards .card {
            padding: 1rem 1rem 5rem; }
            /* line 1490, src/idm_networks/assets/css/style.scss */
            .main .solutions .cards .card::after {
                width: 7rem;
                height: 7rem;
                top: auto;
                left: auto;
                bottom: 3rem;
                right: -2.5rem;
                opacity: 0.1; }
    /* line 1504, src/idm_networks/assets/css/style.scss */
    .main .flagship-solutions .solution {
        flex-direction: column;
        align-items: flex-end; }
        /* line 1508, src/idm_networks/assets/css/style.scss */
        .main .flagship-solutions .solution::before {
            content: none; }
    /* line 1516, src/idm_networks/assets/css/style.scss */
    .sub section {
        margin-bottom: 3rem !important; }
        /* line 1519, src/idm_networks/assets/css/style.scss */
        .sub section h3 {
            text-align: center; }
    /* line 1524, src/idm_networks/assets/css/style.scss */
    .sub .advantages {
        width: auto !important;
        flex-direction: column; }
        /* line 1528, src/idm_networks/assets/css/style.scss */
        .sub .advantages ul {
            padding: 1rem;
            line-height: 1.5; }
    /* line 1534, src/idm_networks/assets/css/style.scss */
    .sub .sub-title {
        margin: 0 0 1rem;
        padding: 1rem 0; }
    /* line 1541, src/idm_networks/assets/css/style.scss */
    .about .title {
        padding: 0 !important; }
    /* line 1545, src/idm_networks/assets/css/style.scss */
    .about section {
        padding: 3rem 1rem !important;
        margin: 0; }
        /* line 1549, src/idm_networks/assets/css/style.scss */
        .about section.challenge {
            margin-top: 0; }
            /* line 1552, src/idm_networks/assets/css/style.scss */
            .about section.challenge .impact p {
                font-size: 2rem; }
        /* line 1558, src/idm_networks/assets/css/style.scss */
        .about section.greetings .image {
            top: 0;
            width: 100vw;
            height: 200px; }
        /* line 1564, src/idm_networks/assets/css/style.scss */
        .about section.greetings div {
            margin-top: 30vh;
            padding: 0; }
        /* line 1571, src/idm_networks/assets/css/style.scss */
        .about section.history .wrapper {
            padding: 0; }
            /* line 1574, src/idm_networks/assets/css/style.scss */
            .about section.history .wrapper > div {
                flex-direction: column; }
            /* line 1580, src/idm_networks/assets/css/style.scss */
            .about section.history .wrapper .term > div:not(:first-of-type) {
                flex-direction: column;
                align-items: flex-start;
                margin-bottom: 1rem; }
            /* line 1587, src/idm_networks/assets/css/style.scss */
            .about section.history .wrapper .term ul {
                margin-left: 0; }
        /* line 1595, src/idm_networks/assets/css/style.scss */
        .about section.location ul {
            flex-direction: column; }
            /* line 1598, src/idm_networks/assets/css/style.scss */
            .about section.location ul li:not(:last-of-type) {
                border: none; }
    /* line 1608, src/idm_networks/assets/css/style.scss */
    .solutions .sub-title small {
        display: block;
        padding: .5rem 0; }
    /* line 1615, src/idm_networks/assets/css/style.scss */
    .solutions .video-conferencing ul {
        flex-wrap: wrap; }
        /* line 1618, src/idm_networks/assets/css/style.scss */
        .solutions .video-conferencing ul li {
            padding: 0.5rem;
            margin: 0.25rem; }
    /* line 1625, src/idm_networks/assets/css/style.scss */
    .solutions .reference-sites {
        flex-direction: column;
        align-items: flex-start;
        padding: 1rem; }
        /* line 1630, src/idm_networks/assets/css/style.scss */
        .solutions .reference-sites h3 {
            margin-bottom: 1rem; }
        /* line 1634, src/idm_networks/assets/css/style.scss */
        .solutions .reference-sites div {
            flex-direction: column;
            align-items: flex-start; }
            /* line 1638, src/idm_networks/assets/css/style.scss */
            .solutions .reference-sites div button {
                margin-top: 1rem;
                margin-left: 0; }
    /* line 1647, src/idm_networks/assets/css/style.scss */
    .solutions .table .rows {
        flex-direction: column;
        border: 1px solid #DDD;
        margin-bottom: 1rem;
        padding: 2rem;
        border-top: 3px solid slategray;
        border-bottom: 3px solid slategray; }
        /* line 1655, src/idm_networks/assets/css/style.scss */
        .solutions .table .rows.th {
            display: none; }
    /* line 1660, src/idm_networks/assets/css/style.scss */
    .solutions .table .row {
        flex-direction: column; }
        /* line 1663, src/idm_networks/assets/css/style.scss */
        .solutions .table .row:last-of-type {
            padding-bottom: 0; }
    /* line 1670, src/idm_networks/assets/css/style.scss */
    .solutions .table .column:first-of-type {
        flex: 0 0 auto;
        font-weight: bold;
        font-size: 17px; }
    /* line 1680, src/idm_networks/assets/css/style.scss */
    .inputs ul {
        flex-direction: column;
        align-items: flex-start; }
        /* line 1684, src/idm_networks/assets/css/style.scss */
        .inputs ul li:first-of-type {
            flex: 0 0 auto; }
        /* line 1688, src/idm_networks/assets/css/style.scss */
        .inputs ul li:last-of-type {
            width: 100%; }
        /* line 1696, src/idm_networks/assets/css/style.scss */
        .inputs ul.phone span:last-of-type {
            display: none; }
        /* line 1703, src/idm_networks/assets/css/style.scss */
        .inputs ul.file button {
            white-space: nowrap; }
    /* line 1712, src/idm_networks/assets/css/style.scss */
    .services .sub-menu li {
        padding: 0.75rem; }
    /* line 1717, src/idm_networks/assets/css/style.scss */
    .services .process {
        padding: 0;
        margin: 1rem -0.25rem;
        flex-wrap: wrap; }
        /* line 1722, src/idm_networks/assets/css/style.scss */
        .services .process dl {
            flex: 1 1 50%; }
            /* line 1725, src/idm_networks/assets/css/style.scss */
            .services .process dl::after {
                content: none; }
            /* line 1729, src/idm_networks/assets/css/style.scss */
            .services .process dl:nth-of-type(1), .services .process dl:nth-of-type(2) {
                margin-bottom: 2rem; }
            /* line 1734, src/idm_networks/assets/css/style.scss */
            .services .process dl dd {
                display: flex; }
    /* line 1742, src/idm_networks/assets/css/style.scss */
    .support .rules {
        margin: 1rem 0 !important;
        padding: 1rem; }
    /* line 1747, src/idm_networks/assets/css/style.scss */
    .support .agreement {
        flex-direction: column;
        align-items: center; }
    /* line 1752, src/idm_networks/assets/css/style.scss */
    .support input {
        width: 100%;
        flex: 1 1 auto; }
    /* line 1758, src/idm_networks/assets/css/style.scss */
    footer {
        padding: 1rem; }
        /* line 1761, src/idm_networks/assets/css/style.scss */
        footer .sitemap {
            flex-direction: column; }
            /* line 1764, src/idm_networks/assets/css/style.scss */
            footer .sitemap div:not(:last-of-type) {
                margin-bottom: 2rem; }
            /* line 1768, src/idm_networks/assets/css/style.scss */
            footer .sitemap h3 {
                margin-bottom: 0.5rem; }
        /* line 1774, src/idm_networks/assets/css/style.scss */
        footer .information ul {
            flex-direction: column;
            margin-top: 1rem; }
        /* line 1780, src/idm_networks/assets/css/style.scss */
        footer .copyright {
            text-align: left;
            margin-top: 1rem; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
