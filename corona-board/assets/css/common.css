@font-face {
    font-family: 'Teko';
    src: url("../fonts/Teko-Regular.ttf"); }

@font-face {
    font-family: 'Poppins';
    src: url("../fonts/Poppins-Light.ttf"); }

@font-face {
    font-family: 'Ultra';
    src: url("../fonts/Ultra-Regular.ttf"); }

@font-face {
    font-family: 'Montserrat';
    src: url("../fonts/Montserrat-ExtraBold2.ttf"); }

@font-face {
    font-family: 'NanumSquare';
    font-weight: 300;
    src: url(../fonts/NanumSquareR.eot);
    src: url(../fonts/NanumSquareR.eot?#iefix) format("embedded-opentype"), url(../fonts/NanumSquareR.woff) format("woff"), url(../fonts/NanumSquareR.ttf) format("truetype"); }

/* line 38, src/assets/css/common.scss */
/* line 24, src/corona-board/assets/css/common.css */
body {
    color: #333;
    width: 100%;
    overflow-x: hidden;
    text-rendering: optimizeLegibility;
    font: 14px/1.5 'Poppins', 'NanumSquare';
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale; }

/* line 47, src/assets/css/common.scss */
/* line 33, src/corona-board/assets/css/common.css */
body .hide {
    display: none; }

/* line 51, src/assets/css/common.scss */
/* line 36, src/corona-board/assets/css/common.css */
body .tilde {
    display: flex;
    align-items: center;
    margin: 0 .25rem; }

/* line 59, src/assets/css/common.scss */
/* line 42, src/corona-board/assets/css/common.css */
*,
*::after,
*::before {
    box-sizing: border-box;
    margin: 0;
    padding: 0; }

/* line 67, src/assets/css/common.scss */
/* line 50, src/corona-board/assets/css/common.css */
svg {
    fill: #27292d; }

/* line 71, src/assets/css/common.scss */
/* line 54, src/corona-board/assets/css/common.css */
canvas {
    opacity: .5;
    position: fixed;
    top: 0;
    left: 0;
    z-index: -1;
    pointer-events: none; }

/* Page Loader */
/* line 81, src/assets/css/common.scss */
/* line 64, src/corona-board/assets/css/common.css */
.js .loading::before,
.js .loading::after {
    content: '';
    position: fixed;
    z-index: 1000; }

/* line 88, src/assets/css/common.scss */
/* line 71, src/corona-board/assets/css/common.css */
.js .loading::before {
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: #dce2ec; }

/* line 96, src/assets/css/common.scss */
/* line 79, src/corona-board/assets/css/common.css */
.js .loading::after {
    top: 50%;
    left: 50%;
    width: 60px;
    height: 60px;
    margin: -30px 0 0 -30px;
    border-radius: 50%;
    opacity: 0.4;
    background: #444;
    -webkit-animation: loaderAnim 0.7s linear infinite alternate forwards;
    animation: loaderAnim 0.7s linear infinite alternate forwards; }

@-webkit-keyframes loaderAnim {
    to {
        opacity: 1;
        transform: scale3d(0.5, 0.5, 1); } }

@keyframes loaderAnim {
    to {
        opacity: 1;
        transform: scale3d(0.5, 0.5, 1); } }

/* line 116, src/assets/css/common.scss */
/* line 102, src/corona-board/assets/css/common.css */
a {
    text-decoration: none;
    color: #444;
    outline: none; }

/* line 122, src/assets/css/common.scss */
/* line 108, src/corona-board/assets/css/common.css */
a:hover,
a:focus {
    color: #555;
    outline: none;
    text-decoration: none; }

/* line 129, src/assets/css/common.scss */
/* line 115, src/corona-board/assets/css/common.css */
.js-image {
    max-width: 100%;
    display: block; }

/* line 134, src/assets/css/common.scss */
/* line 120, src/corona-board/assets/css/common.css */
.loaded .js-image {
    opacity: 0; }

/* line 139, src/assets/css/common.scss */
/* line 124, src/corona-board/assets/css/common.css */
.container {
    padding: 0;
    /* bootstrap */
    width: 100%;
    height: 100vh;
    height: calc(var(--vh, 1vh) * 100);
    display: flex; }

/* line 147, src/assets/css/common.scss */
/* line 133, src/corona-board/assets/css/common.css */
section {
    position: relative; }

/* line 151, src/assets/css/common.scss */
/* line 137, src/corona-board/assets/css/common.css */
ul {
    margin: 0;
    padding: 0;
    list-style: none;
    display: flex; }

/* line 158, src/assets/css/common.scss */
/* line 144, src/corona-board/assets/css/common.css */
img {
    display: block;
    width: 100%; }

/* line 163, src/assets/css/common.scss */
/* line 149, src/corona-board/assets/css/common.css */
.add-input {
    width: 100%;
    margin: 0 auto; }

/* line 168, src/assets/css/common.scss */
/* line 154, src/corona-board/assets/css/common.css */
h1, h2, h3, h4, h5, p {
    margin: 0;
    line-height: 1.2; }

/* line 173, src/assets/css/common.scss */
/* line 159, src/corona-board/assets/css/common.css */
small {
    font-family: 'Comfortaa', 'NanumSquare', sans-serif;
    line-height: 1.2; }

/* line 178, src/assets/css/common.scss */
/* line 164, src/corona-board/assets/css/common.css */
.active,
.active-sub-menu {
    opacity: 1 !important;
    visibility: visible !important;
    display: flex !important; }

/* line 185, src/assets/css/common.scss */
/* line 171, src/corona-board/assets/css/common.css */
fieldset {
    border-radius: .5rem;
    border: 1px solid #DDD; }

/* line 193, src/assets/css/common.scss */
/* line 176, src/corona-board/assets/css/common.css */
input {
    -webkit-appearance: none;
    height: auto;
    border: 0;
    padding: .5rem .25rem;
    font: 14px/1 'NanumSquare';
    background-color: white;
    outline: 0;
    box-sizing: border-box;
    border-radius: .25rem;
    position: relative;
    /* Chrome, Safari, Edge, Opera */
    /* Firefox */ }

/* line 205, src/assets/css/common.scss */
/* line 190, src/corona-board/assets/css/common.css */
input:focus {
    box-shadow: 0 0 1px 1px #3b9cff; }

/* line 209, src/assets/css/common.scss */
/* line 193, src/corona-board/assets/css/common.css */
input:disabled {
    background-color: rgba(0, 0, 0, 0.1); }

/* line 214, src/assets/css/common.scss */
/* line 196, src/corona-board/assets/css/common.css */
input::-webkit-outer-spin-button, input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0; }

/* line 221, src/assets/css/common.scss */
/* line 200, src/corona-board/assets/css/common.css */
input[type=number] {
    -moz-appearance: textfield; }

/* line 225, src/assets/css/common.scss */
/* line 203, src/corona-board/assets/css/common.css */
input[type="password"] {
    font-family: "Comfortaa", sans-serif; }

/* line 231, src/assets/css/common.scss */
/* line 207, src/corona-board/assets/css/common.css */
input:focus, select:focus, button:focus {
    outline: 0; }

/* line 235, src/assets/css/common.scss */
/* line 211, src/corona-board/assets/css/common.css */
label {
    font-weight: normal;
    /* bootstrap*/
    margin-bottom: 0;
    /* bootstrap*/
    color: slategray; }

/* line 241, src/assets/css/common.scss */
/* line 219, src/corona-board/assets/css/common.css */
button {
    display: flex;
    align-items: center;
    border: 0;
    background: #07babd;
    color: white;
    border-radius: .3rem;
    padding: .5rem 1rem;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none; }

/* line 252, src/assets/css/common.scss */
/* line 233, src/corona-board/assets/css/common.css */
button svg + span {
    margin-left: .2rem; }

/* line 257, src/assets/css/common.scss */
/* line 237, src/corona-board/assets/css/common.css */
.btn-submit {
    background-color: #07babd !important;
    border: 0 !important; }

/* line 262, src/assets/css/common.scss */
/* line 242, src/corona-board/assets/css/common.css */
.btn-cancel {
    background-color: rgba(0, 0, 0, 0.1); }

/* line 266, src/assets/css/common.scss */
/* line 246, src/corona-board/assets/css/common.css */
.btn-modify {
    background-color: #3b9cff;
    color: #333;
    width: 2rem;
    height: 2rem;
    padding: 0; }

/* line 274, src/assets/css/common.scss */
/* line 254, src/corona-board/assets/css/common.css */
.btn-download {
    background-color: lightslategray !important; }

/* line 278, src/assets/css/common.scss */
/* line 258, src/corona-board/assets/css/common.css */
textarea {
    background-color: white;
    border: none;
    border-radius: .5rem;
    padding: .5rem;
    resize: none; }

/* line 285, src/assets/css/common.scss */
/* line 265, src/corona-board/assets/css/common.css */
textarea:focus {
    outline: 0; }

/* line 290, src/assets/css/common.scss */
/* line 269, src/corona-board/assets/css/common.css */
header {
    flex: 0 0 auto;
    display: flex;
    align-content: center;
    justify-content: space-between;
    box-sizing: border-box; }

/* line 297, src/assets/css/common.scss */
/* line 276, src/corona-board/assets/css/common.css */
header a {
    display: flex;
    padding: .4rem .8rem; }

/* line 302, src/assets/css/common.scss */
/* line 280, src/corona-board/assets/css/common.css */
header .logo {
    line-height: 1; }

/* line 306, src/assets/css/common.scss */
/* line 283, src/corona-board/assets/css/common.css */
header .menu {
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    display: flex;
    align-items: center;
    cursor: pointer; }

/* line 312, src/assets/css/common.scss */
/* line 292, src/corona-board/assets/css/common.css */
header .menu a {
    font-size: 13px; }

/* line 317, src/assets/css/common.scss */
/* line 295, src/corona-board/assets/css/common.css */
header button {
    padding: .5rem 2rem; }

/* line 322, src/assets/css/common.scss */
/* line 299, src/corona-board/assets/css/common.css */
.container > header {
    padding: 0 1rem; }

/* line 326, src/assets/css/common.scss */
/* line 303, src/corona-board/assets/css/common.css */
main {
    flex: 1 1 auto;
    display: flex; }

/* line 331, src/assets/css/common.scss */
/* line 308, src/corona-board/assets/css/common.css */
aside {
    flex-grow: 0;
    flex-shrink: 0;
    flex-direction: column;
    transition: .0s; }

/* line 337, src/assets/css/common.scss */
/* line 314, src/corona-board/assets/css/common.css */
aside ul {
    flex-direction: column; }

/* line 340, src/assets/css/common.scss */
/* line 317, src/corona-board/assets/css/common.css */
aside ul li {
    flex: 1 1 auto; }

/* line 346, src/assets/css/common.scss */
/* line 321, src/corona-board/assets/css/common.css */
.flex-wrapper {
    display: flex; }

/* line 350, src/assets/css/common.scss */
/* line 325, src/corona-board/assets/css/common.css */
.content {
    opacity: 0;
    flex: 1 1 auto;
    align-items: center;
    overflow-x: hidden;
    overflow-y: auto;
    display: flex;
    flex-direction: column;
    -webkit-animation: fadeInOpacity .4s forwards;
    animation: fadeInOpacity .4s forwards;
    transition: .2s border-color; }

/* line 362, src/assets/css/common.scss */
/* line 338, src/corona-board/assets/css/common.css */
.content-title {
    flex: 0 0 auto;
    padding: 0 1rem;
    width: 100%;
    box-sizing: border-box;
    display: flex;
    justify-content: space-between;
    align-items: center; }

/* line 371, src/assets/css/common.scss */
/* line 347, src/corona-board/assets/css/common.css */
.content-title h1 {
    font: normal 2rem/1 'Nanumsquare';
    flex: 1 1 auto; }

/* line 377, src/assets/css/common.scss */
/* line 352, src/corona-board/assets/css/common.css */
.content .title p {
    color: #5e5c67;
    font-size: 16px; }

/* line 382, src/assets/css/common.scss */
/* line 357, src/corona-board/assets/css/common.css */
.content-view {
    flex: 0 1 auto;
    padding: 1rem;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    max-width: 1200px;
    width: 100%;
    position: relative; }

/* line 393, src/assets/css/common.scss */
/* line 368, src/corona-board/assets/css/common.css */
.content-title + .content-view {
    padding: 0 1rem 1rem 1rem; }

/* line 397, src/assets/css/common.scss */
/* line 372, src/corona-board/assets/css/common.css */
.wrapper {
    flex: 1 1 auto;
    padding: 2rem;
    margin: 0 auto;
    max-width: 1200px;
    display: flex;
    flex-direction: column;
    box-sizing: border-box; }

/* line 407, src/assets/css/common.scss */
/* line 382, src/corona-board/assets/css/common.css */
.input-container {
    display: flex;
    align-content: center;
    margin-bottom: 1rem;
    position: relative; }

/* line 413, src/assets/css/common.scss */
/* line 388, src/corona-board/assets/css/common.css */
.input-container label {
    align-self: center; }

/* line 417, src/assets/css/common.scss */
/* line 391, src/corona-board/assets/css/common.css */
.input-container input {
    flex: 1 1 auto; }

/* line 421, src/assets/css/common.scss */
/* line 394, src/corona-board/assets/css/common.css */
.input-container div {
    display: flex;
    align-items: center; }

/* line 425, src/assets/css/common.scss */
/* line 398, src/corona-board/assets/css/common.css */
.input-container div input {
    flex: 1 1 auto; }

/* line 431, src/assets/css/common.scss */
/* line 402, src/corona-board/assets/css/common.css */
.buttons {
    display: flex; }

/* line 434, src/assets/css/common.scss */
/* line 405, src/corona-board/assets/css/common.css */
.buttons button {
    margin-left: .5rem; }

/* Progress */
/* line 441, src/assets/css/common.scss */
/* line 410, src/corona-board/assets/css/common.css */
.progress-wrap {
    position: fixed;
    right: 50px;
    bottom: 50px;
    height: 46px;
    width: 46px;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-content: center;
    border-radius: 50px;
    z-index: 10000;
    opacity: 0;
    visibility: hidden;
    background-color: lightsteelblue;
    transform: translateY(15px);
    transition: all 200ms linear; }

/* line 461, src/assets/css/common.scss */
/* line 429, src/corona-board/assets/css/common.css */
.progress-wrap.active-progress {
    opacity: 1;
    visibility: visible;
    transform: translateY(0); }

/* line 467, src/assets/css/common.scss */
/* line 435, src/corona-board/assets/css/common.css */
.progress-wrap svg.progress-circle path {
    stroke: white;
    stroke-width: 4;
    box-sizing: border-box;
    transition: all 200ms linear; }

/* line 475, src/assets/css/common.scss */
/* line 442, src/corona-board/assets/css/common.css */
.progress-wrap svg {
    fill: white;
    align-self: center; }

/* Pagination */
/* line 483, src/assets/css/common.scss */
/* line 448, src/corona-board/assets/css/common.css */
.pagination {
    margin: 2rem auto; }

/* line 488, src/assets/css/common.scss */
/* line 452, src/corona-board/assets/css/common.css */
.pagination ul {
    display: flex; }

/* line 492, src/assets/css/common.scss */
/* line 456, src/corona-board/assets/css/common.css */
.pagination li {
    margin: 0 1rem;
    color: slategray;
    display: flex;
    align-items: center; }

/* line 499, src/assets/css/common.scss */
/* line 463, src/corona-board/assets/css/common.css */
.pagination .active {
    color: #36299f;
    font-weight: bold; }

/* line 504, src/assets/css/common.scss */
/* line 468, src/corona-board/assets/css/common.css */
.pagination svg {
    fill: slategray; }

/* ,Checkbox */
/* line 510, src/assets/css/common.scss */
/* line 473, src/corona-board/assets/css/common.css */
.checkbox {
    position: relative; }

/* line 513, src/assets/css/common.scss */
/* line 476, src/corona-board/assets/css/common.css */
.checkbox input {
    position: absolute;
    opacity: 0; }

/* line 517, src/assets/css/common.scss */
/* line 480, src/corona-board/assets/css/common.css */
.checkbox input:checked + label {
    color: #36299f; }

/* line 522, src/assets/css/common.scss */
/* line 483, src/corona-board/assets/css/common.css */
.checkbox label {
    flex: 1 1 auto !important;
    color: #AAA;
    display: flex;
    align-items: center;
    position: relative;
    cursor: pointer;
    padding: 0;
    transition: .2s color; }

/* line 532, src/assets/css/common.scss */
/* line 493, src/corona-board/assets/css/common.css */
.checkbox label::before {
    border-radius: 2px;
    transition: .2s;
    content: '';
    margin-right: 3px;
    width: 15px;
    height: 15px;
    border: 1px solid #EEE;
    background-color: white; }

/* line 545, src/assets/css/common.scss */
/* line 504, src/corona-board/assets/css/common.css */
.checkbox input:checked + label:after {
    content: '';
    width: 10px;
    height: 6px;
    position: absolute;
    top: 3px;
    left: 3px;
    border: 2px solid black;
    border-top: none;
    border-right: none;
    background: transparent;
    opacity: 1;
    transform: rotate(-45deg); }

/* Radio Button */
/* line 563, src/assets/css/common.scss */
/* line 520, src/corona-board/assets/css/common.css */
input[type="radio"] {
    position: absolute;
    opacity: 0; }

/* line 568, src/assets/css/common.scss */
/* line 525, src/corona-board/assets/css/common.css */
input[type="radio"] + label {
    cursor: pointer;
    margin-right: 1rem; }

/* line 573, src/assets/css/common.scss */
/* line 530, src/corona-board/assets/css/common.css */
input[type="radio"] + label:before {
    content: '';
    background: #F3F6F9;
    border-radius: 100%;
    border: 1px solid #E3E6E9;
    display: inline-block;
    width: 12px;
    height: 12px;
    position: relative;
    margin-right: 3px;
    vertical-align: middle;
    transition: all .2s ease; }

/* line 587, src/assets/css/common.scss */
/* line 544, src/corona-board/assets/css/common.css */
input[type="radio"]:hover + label:before, input[type="radio"]:checked + label:before {
    border-color: #07babd !important;
    background-color: #07babd !important;
    box-shadow: inset 0 0 0 2px #DDD; }

/* line 593, src/assets/css/common.scss */
/* line 550, src/corona-board/assets/css/common.css */
input[type="radio"]:focus + label:before {
    outline: none; }

/* line 597, src/assets/css/common.scss */
/* line 554, src/corona-board/assets/css/common.css */
input[type="radio"]:disabled + label {
    cursor: auto; }

/* line 601, src/assets/css/common.scss */
/* line 558, src/corona-board/assets/css/common.css */
input[type="radio"]:disabled:checked + label:before {
    box-shadow: inset 0 0 0 2px #f4f4f4;
    border-color: #b4b4b4;
    background: #b4b4b4; }

/* line 607, src/assets/css/common.scss */
/* line 564, src/corona-board/assets/css/common.css */
input[type="radio"]:disabled + label:before {
    border-color: #b4b4b4;
    background: #f4f4f4; }

/* line 612, src/assets/css/common.scss */
/* line 569, src/corona-board/assets/css/common.css */
input[type="radio"] + label:empty:before {
    margin-right: 0; }

/* line 616, src/assets/css/common.scss */
/* line 573, src/corona-board/assets/css/common.css */
.input-comment {
    flex: 1 1 100% !important; }

/*selectbox*/
/* line 622, src/assets/css/common.scss */
/* line 578, src/corona-board/assets/css/common.css */
.selectbox {
    position: relative;
    box-sizing: border-box;
    align-items: center;
    display: flex; }

/* line 628, src/assets/css/common.scss */
/* line 584, src/corona-board/assets/css/common.css */
.selectbox::-ms-expand {
    display: none; }

/* line 632, src/assets/css/common.scss */
/* line 587, src/corona-board/assets/css/common.css */
.selectbox::before {
    content: "";
    position: absolute;
    top: 50%;
    right: .7rem;
    width: 0;
    height: 0;
    margin-top: -6px;
    border: solid black;
    border-width: 0 1px 1px 0;
    display: inline-block;
    padding: 3px;
    transform: rotate(45deg);
    -webkit-transform: rotate(45deg); }

/* line 648, src/assets/css/common.scss */
/* line 602, src/corona-board/assets/css/common.css */
.selectbox label {
    white-space: nowrap;
    margin-right: .5rem; }

/* line 653, src/assets/css/common.scss */
/* line 606, src/corona-board/assets/css/common.css */
.selectbox select {
    border: 1px solid #EEE;
    border-radius: .3rem;
    display: flex;
    flex: 1 1 auto;
    width: 100%;
    -webkit-appearance: none;
    padding: .25rem 1.25rem .25rem .25rem;
    height: auto;
    font: 14px/1 'NanumSquare';
    background-color: white;
    outline: 0;
    box-sizing: border-box;
    cursor: pointer; }

/*table*/
/* line 672, src/assets/css/common.scss */
/* line 623, src/corona-board/assets/css/common.css */
.table {
    width: 100%;
    margin: 0 auto 1rem; }

/* line 677, src/assets/css/common.scss */
/* line 628, src/corona-board/assets/css/common.css */
.table button {
    display: flex;
    justify-content: center;
    align-items: center;
    border: 0;
    background: #EEE;
    color: white;
    border-radius: .2rem;
    padding: .25rem .5rem;
    margin: 0 .25rem;
    cursor: pointer; }

/* line 690, src/assets/css/common.scss */
/* line 641, src/corona-board/assets/css/common.css */
.table .row {
    flex: 1 1 auto;
    display: flex;
    align-items: center;
    text-align: center;
    padding: .5rem 0;
    background: white;
    border-radius: .5rem;
    position: relative;
    -webkit-animation: fadeInOpacity .8s forwards;
    animation: fadeInOpacity .8s forwards; }

/* line 702, src/assets/css/common.scss */
/* line 654, src/corona-board/assets/css/common.css */
.table .row li {
    flex: 1 1 auto;
    display: flex;
    justify-content: center;
    margin: 0 .25rem; }

/* line 709, src/assets/css/common.scss */
/* line 661, src/corona-board/assets/css/common.css */
.table .row span {
    color: #5e5c67;
    align-items: center;
    display: flex;
    justify-content: center; }

/* line 716, src/assets/css/common.scss */
/* line 668, src/corona-board/assets/css/common.css */
.table .th {
    font: 13px/1.2 'Comfortaa', 'Nanumsquare';
    margin: .5rem auto .2rem !important;
    color: slategray !important;
    word-break: keep-all;
    border-radius: 0;
    background: transparent !important;
    padding: 0;
    cursor: default; }

/* line 730, src/assets/css/common.scss */
/* line 679, src/corona-board/assets/css/common.css */
.table .list {
    height: 100%;
    overflow-y: auto; }

/* =====================================================
   Toggle buttons
   ===================================================== */
/* line 739, src/assets/css/common.scss */
/* line 687, src/corona-board/assets/css/common.css */
.toggle {
    display: block;
    text-align: center;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none; }

/* line 745, src/assets/css/common.scss */
/* line 696, src/corona-board/assets/css/common.css */
.toggle-checkbox {
    display: none; }

/* line 749, src/assets/css/common.scss */
/* line 700, src/corona-board/assets/css/common.css */
.toggle-button {
    display: block;
    background-color: #E3E6E9;
    margin: 0 auto;
    font-size: 1.4em;
    transition: .2s; }

/* line 757, src/assets/css/common.scss */
/* line 708, src/corona-board/assets/css/common.css */
.toggle-button:hover {
    cursor: pointer; }

/* line 761, src/assets/css/common.scss */
/* line 712, src/corona-board/assets/css/common.css */
.toggle .toggle-button {
    position: relative;
    height: 22px;
    width: 36px;
    border-radius: 25px; }

/* line 768, src/assets/css/common.scss */
/* line 719, src/corona-board/assets/css/common.css */
.toggle .toggle-feature {
    display: block;
    position: absolute;
    top: 3px;
    left: 3px;
    fill: white;
    border-radius: 50%;
    transition: .2s; }

/* line 778, src/assets/css/common.scss */
/* line 729, src/corona-board/assets/css/common.css */
.toggle .toggle-checkbox:checked + .toggle-button {
    background-color: #3b9cff;
    fill: white; }

/* line 783, src/assets/css/common.scss */
/* line 734, src/corona-board/assets/css/common.css */
.toggle .toggle-checkbox:checked + .toggle-button > * {
    left: 16px; }

/* Toggle Checkbox */
/* line 789, src/assets/css/common.scss */
/* line 739, src/corona-board/assets/css/common.css */
.toggle-activation {
    flex: 1 1 100%;
    flex-direction: row-reverse;
    align-items: center; }

/* line 795, src/assets/css/common.scss */
/* line 745, src/corona-board/assets/css/common.css */
.toggle-activation .toggle {
    display: flex;
    width: 40px;
    height: 80%; }

/* line 801, src/assets/css/common.scss */
/* line 751, src/corona-board/assets/css/common.css */
.toggle-activation label {
    flex: 0 0 auto !important;
    margin-right: .5rem; }

/* line 806, src/assets/css/common.scss */
/* line 756, src/corona-board/assets/css/common.css */
.toggle-activation .toggle-button {
    height: 20px;
    border-radius: 30px;
    flex: 0 0 100% !important;
    background-color: orangered; }

/* line 813, src/assets/css/common.scss */
/* line 763, src/corona-board/assets/css/common.css */
.toggle-activation .toggle-feature {
    top: -2px;
    left: -2px;
    width: 24px;
    height: 24px;
    background-color: white;
    border-radius: 50%; }

/* line 822, src/assets/css/common.scss */
/* line 772, src/corona-board/assets/css/common.css */
.toggle-activation .toggle-checkbox:checked + .toggle-button {
    background-color: lightseagreen; }

/* line 826, src/assets/css/common.scss */
/* line 776, src/corona-board/assets/css/common.css */
.toggle-activation .toggle-checkbox:checked + .toggle-button > * {
    left: 16px; }

/* =====================================================
   Modal Effect
   ===================================================== */
/* line 834, src/assets/css/common.scss */
/* line 783, src/corona-board/assets/css/common.css */
.modal {
    opacity: 0;
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: white;
    flex-direction: column;
    border-radius: .5rem;
    box-sizing: border-box;
    overflow-x: hidden;
    overflow-y: auto;
    cursor: default;
    transition: .25s;
    z-index: 10; }

/* line 852, src/assets/css/common.scss */
/* line 801, src/corona-board/assets/css/common.css */
.modal {
    width: 50vw;
    height: 50vh;
    max-height: 60%;
    overflow-y: auto; }

/* line 858, src/assets/css/common.scss */
/* line 807, src/corona-board/assets/css/common.css */
.modal .close {
    position: absolute;
    top: 1rem;
    right: 1rem;
    cursor: pointer; }

/* line 865, src/assets/css/common.scss */
/* line 813, src/corona-board/assets/css/common.css */
.modal header {
    flex: 0 0 auto;
    flex-direction: column !important; }

/* line 870, src/assets/css/common.scss */
/* line 817, src/corona-board/assets/css/common.css */
.modal .title {
    padding: 1rem;
    display: flex;
    justify-content: space-between; }

/* line 876, src/assets/css/common.scss */
/* line 822, src/corona-board/assets/css/common.css */
.modal .row {
    padding: 0; }

/* line 880, src/assets/css/common.scss */
/* line 825, src/corona-board/assets/css/common.css */
.modal .modal-content {
    flex-direction: column; }

/* line 884, src/assets/css/common.scss */
/* line 828, src/corona-board/assets/css/common.css */
.modal section {
    padding: 0 1rem 1rem 1rem;
    flex: 1 1 auto;
    overflow-y: auto; }

/* line 891, src/assets/css/common.scss */
/* line 834, src/corona-board/assets/css/common.css */
.overlay {
    display: flex;
    justify-content: center;
    align-items: center;
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background: rgba(0, 0, 0, 0.5);
    visibility: hidden;
    opacity: 0;
    z-index: 5;
    transition: opacity .4s; }

@media screen and (max-width: 768px) {
    /* line 908, src/assets/css/common.scss */
    /* line 851, src/corona-board/assets/css/common.css */
    .modal {
        padding: 1rem;
        width: 90vw; } }

/* Scrollbar */
/* line 915, src/assets/css/common.scss */
/* line 857, src/corona-board/assets/css/common.css */
::-webkit-scrollbar-track {
    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
    border-radius: 6px;
    background-color: #eee; }

/* line 921, src/assets/css/common.scss */
/* line 863, src/corona-board/assets/css/common.css */
::-webkit-scrollbar {
    width: 6px;
    height: 6px;
    background-color: #eee; }

/* line 927, src/assets/css/common.scss */
/* line 869, src/corona-board/assets/css/common.css */
::-webkit-scrollbar-thumb {
    border-radius: 6px;
    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
    background-color: #a3a6a9; }

@-webkit-keyframes fadeInOpacity {
    0% {
        opacity: 0; }
    100% {
        opacity: 1; } }

@keyframes fadeInOpacity {
    0% {
        opacity: 0; }
    100% {
        opacity: 1; } }

/* ============================================================
   Date Picker
   ============================================================ */
/* line 947, src/assets/css/common.scss */
/* line 890, src/corona-board/assets/css/common.css */
.ui-datepicker {
    background-color: white;
    padding: 1rem;
    box-shadow: 0 0 14px rgba(0, 0, 0, 0.1);
    border-radius: .5rem; }

/* line 954, src/assets/css/common.scss */
/* line 897, src/corona-board/assets/css/common.css */
.ui-icon {
    display: none; }

/* line 958, src/assets/css/common.scss */
/* line 901, src/corona-board/assets/css/common.css */
.ui-datepicker-header {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: .5rem; }

/* line 965, src/assets/css/common.scss */
/* line 908, src/corona-board/assets/css/common.css */
.ui-datepicker .ui-datepicker-title {
    display: flex; }

/* line 969, src/assets/css/common.scss */
/* line 912, src/corona-board/assets/css/common.css */
.ui-datepicker .ui-datepicker-title select {
    min-width: 80px;
    margin: 0 .25rem;
    -webkit-appearance: auto;
    -moz-appearance: auto;
    appearance: auto;
    padding-right: 0; }

/* line 976, src/assets/css/common.scss */
/* line 921, src/corona-board/assets/css/common.css */
.ui-datepicker .ui-datepicker-prev,
.ui-datepicker .ui-datepicker-next {
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 1rem;
    height: 1rem;
    border-radius: .2rem;
    transition: background-color .2s;
    cursor: pointer; }

/* line 989, src/assets/css/common.scss */
/* line 934, src/corona-board/assets/css/common.css */
.ui-datepicker .ui-datepicker-prev {
    left: 1rem; }

/* line 993, src/assets/css/common.scss */
/* line 938, src/corona-board/assets/css/common.css */
.ui-datepicker .ui-datepicker-prev::before {
    content: "<";
    line-height: 10px; }

/* line 998, src/assets/css/common.scss */
/* line 943, src/corona-board/assets/css/common.css */
.ui-datepicker .ui-datepicker-next {
    right: 1rem; }

/* line 1002, src/assets/css/common.scss */
/* line 947, src/corona-board/assets/css/common.css */
.ui-datepicker .ui-datepicker-next::before {
    content: ">";
    line-height: 10px; }

/* line 1007, src/assets/css/common.scss */
/* line 952, src/corona-board/assets/css/common.css */
.ui-state-default {
    border: 0 !important;
    background-color: transparent;
    width: 2rem;
    height: 2rem;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: background-color .2s; }

/* line 1019, src/assets/css/common.scss */
/* line 964, src/corona-board/assets/css/common.css */
.ui-state-active {
    background-color: #07babd;
    color: white !important; }

/* line 1024, src/assets/css/common.scss */
/* line 969, src/corona-board/assets/css/common.css */
.ui-state-hover {
    background-color: #3b9cff;
    color: white !important; }

/* =====================================================
   Dark mode
   ===================================================== */
/* line 1033, src/assets/css/common.scss */
/* line 977, src/corona-board/assets/css/common.css */
.dark-mode,
.dark-mode main {
    background-color: #27292d !important;
    color: white; }

/* line 1039, src/assets/css/common.scss */
/* line 983, src/corona-board/assets/css/common.css */
.dark-mode a {
    color: white; }

/* line 1043, src/assets/css/common.scss */
/* line 987, src/corona-board/assets/css/common.css */
.dark-mode .button-cancel {
    background-color: #85899a;
    color: white; }

/* line 1048, src/assets/css/common.scss */
/* line 992, src/corona-board/assets/css/common.css */
.dark-mode p, .dark-mode label {
    color: #d0d3dc !important; }

/* line 1052, src/assets/css/common.scss */
/* line 996, src/corona-board/assets/css/common.css */
.dark-mode input, .dark-mode select {
    background-color: #484c5a !important;
    color: white; }

/* line 1057, src/assets/css/common.scss */
/* line 1001, src/corona-board/assets/css/common.css */
.dark-mode .selectbox::before {
    border: solid #3b9cff;
    border-width: 0 1px 1px 0; }

/* line 1062, src/assets/css/common.scss */
/* line 1006, src/corona-board/assets/css/common.css */
.dark-mode header {
    border-color: #373a46 !important; }

/* line 1066, src/assets/css/common.scss */
/* line 1010, src/corona-board/assets/css/common.css */
.dark-mode aside {
    background-color: #27292d !important; }

/* line 1070, src/assets/css/common.scss */
/* line 1014, src/corona-board/assets/css/common.css */
.dark-mode .menu {
    background-color: #27292d;
    color: white;
    border-color: #393b40; }

/* line 1076, src/assets/css/common.scss */
/* line 1020, src/corona-board/assets/css/common.css */
.dark-mode .menu a {
    color: #ccc;
    transition: .2s color; }

/* line 1081, src/assets/css/common.scss */
/* line 1025, src/corona-board/assets/css/common.css */
.dark-mode .content {
    background: #373a46 !important; }

/* line 1088, src/assets/css/common.scss */
/* line 1029, src/corona-board/assets/css/common.css */
.dark-mode svg {
    fill: rgba(255, 255, 255, 0.3); }

/* line 1092, src/assets/css/common.scss */
/* line 1033, src/corona-board/assets/css/common.css */
.dark-mode .table .row {
    background-color: #373a46; }

/* line 1096, src/assets/css/common.scss */
/* line 1037, src/corona-board/assets/css/common.css */
.dark-mode .table .row span {
    color: #d0d3dc; }

/* line 1100, src/assets/css/common.scss */
/* line 1041, src/corona-board/assets/css/common.css */
.dark-mode input[type="radio"] + label:before {
    background-color: #373a46;
    border-color: #27292d; }

/* line 1105, src/assets/css/common.scss */
/* line 1046, src/corona-board/assets/css/common.css */
.dark-mode input[type="radio"]:hover + label:before, .dark-mode input[type="radio"]:checked + label:before {
    box-shadow: inset 0 0 0 2px #27292d; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
